Class: RSpec::Matchers::BuiltIn::Compound
  
  
  PrivatePrivate
Class: RSpec::Matchers::BuiltIn::Compound
  
  
  Private


  
  
    Inherits:Inherits:
    
      BaseMatcherBaseMatcher
      
        
          ObjectObject
          
            BaseMatcherBaseMatcher
          
            RSpec::Matchers::BuiltIn::CompoundRSpec::Matchers::BuiltIn::Compound
          
        
          Object
          
            BaseMatcher
          
            RSpec::Matchers::BuiltIn::Compound
          
        
        show allshow all
      
    
      BaseMatcher
      
        
          Object
          
            BaseMatcher
          
            RSpec::Matchers::BuiltIn::Compound
          
        
        show all
      
    
  
    Inherits:
    
      BaseMatcher
      
        
          Object
          
            BaseMatcher
          
            RSpec::Matchers::BuiltIn::Compound
          
        
        show all
      
    
  
  

  
  
  
  
  

  

  
  
    Defined in:Defined in:
    lib/rspec/matchers/built_in/compound.rblib/rspec/matchers/built_in/compound.rb
  
    Defined in:
    lib/rspec/matchers/built_in/compound.rb
  
  

  
  
    Inherits:
    
      BaseMatcher
      
        
          Object
          
            BaseMatcher
          
            RSpec::Matchers::BuiltIn::Compound
          
        
        show all
      
    
  
  

  
  
  
  
  

  

  
  
    Defined in:
    lib/rspec/matchers/built_in/compound.rb
  
  


OverviewOverview
  
    
  This class is part of a private API.This class is part of a private API.
  You should avoid using this class if possible, as it may be removed or be changed in the future.

  This class is part of a private API.
  You should avoid using this class if possible, as it may be removed or be changed in the future.

Base class for andand and oror compound matchers.Base class for and and or compound matchers.


  
    
  This class is part of a private API.
  You should avoid using this class if possible, as it may be removed or be changed in the future.

Base class for and and or compound matchers.


  

  
    
  This class is part of a private API.
  You should avoid using this class if possible, as it may be removed or be changed in the future.

Base class for and and or compound matchers.


  


  


  


  Direct Known SubclassesDirect Known Subclasses
  And, OrAnd, Or

  Direct Known Subclasses
  And, Or

Defined Under NamespaceDefined Under Namespace

  
    
  
    
      Classes:Classes: And, NestedEvaluator, Or, SequentialEvaluator
    
  

  
    
  
    
      Classes: And, NestedEvaluator, Or, SequentialEvaluator
    
  




  Constant SummaryConstant Summary
  
  Constants inherited
     from BaseMatcherConstants inherited
     from BaseMatcher
  BaseMatcher::UNDEFINEDBaseMatcher::UNDEFINED





  
    
      Instance Method Summary
      
    
      Instance Method Summary
      
    

    
      
        
  
  
  
  
  
  
  
  privateprivate

  
    
  

  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  privateprivate

  
    
  

  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  privateprivate

  
    
  

  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  privateprivate

  
    
  

  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
    constructorconstructor
  
  
  
  
  
  privateprivate

  
    A new instance of Compound.A new instance of Compound.
A new instance of Compound.
A new instance of Compound.

  

  
  
  
    constructor
  
  
  
  
  
  private

  
    A new instance of Compound.

  


      
        
  
  
  
  
  
  
  
  privateprivate

  
    
  

  
  
  
  
  
  
  
  private

  
    
  


      
    
      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
    constructor
  
  
  
  
  
  private

  
    A new instance of Compound.

  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
    
  


  
  
  
  
  
  
  
  
  Methods inherited from BaseMatcherMethods inherited from BaseMatcher
  #match_unless_raises, #matches?#match_unless_raises, #matches?

  
  
  
  
  
  
  
  
  Methods included from BaseMatcher::DefaultFailureMessagesMethods included from BaseMatcher::DefaultFailureMessages
  #failure_message, #failure_message_when_negated#failure_message, #failure_message_when_negated

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  Methods included from ComposableMethods included from Composable
  #===, #and, #description_of, #or, should_enumerate?, surface_descriptions_in, unreadable_io?, #values_match?#===, #and, #description_of, #or, should_enumerate?, surface_descriptions_in, unreadable_io?, #values_match?

  Constructor DetailsConstructor Details
  
    
  
  
    
  This method is part of a private API.This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

Returns a new instance of CompoundReturns a new instance of Compound


  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

Returns a new instance of Compound


  

  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

Returns a new instance of Compound


  


  


  


  
    
      


10
11
12
13


10
11
12
13
    
      


10
11
12
13
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10# File 'lib/rspec/matchers/built_in/compound.rb', line 10

defdef initializeinitialize((matcher_1matcher_1,, matcher_2matcher_2))
  @matcher_1@matcher_1 == matcher_1matcher_1
  @matcher_2@matcher_2 == matcher_2matcher_2
endend# File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
  
    
      


10
11
12
13
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
  

  
    
      


10
11
12
13
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
  


  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

Returns a new instance of Compound


  


  


  
    
      


10
11
12
13
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
  


  

  Constructor Details
  
    
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

Returns a new instance of Compound


  


  


  
    
      


10
11
12
13
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
  


  



  
    Instance Method DetailsInstance Method Details

    
      
  
  
    
  This method is part of a private API.This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  

  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:Returns:

  
    
      
      
        (StringString)(String)
      
      
      
    
      
      
        (String)
      
      
      
    
  

  
    
      
      
        (String)
      
      
      
    
  



  
Returns:

  
    
      
      
        (String)
      
      
      
    
  



  
    
      


25
26
27


25
26
27
    
      


25
26
27
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25# File 'lib/rspec/matchers/built_in/compound.rb', line 25

defdef descriptiondescription
  ""#{#{matcher_1matcher_1..descriptiondescription}}  #{#{conjunctionconjunction}}  #{#{matcher_2matcher_2..descriptiondescription}}"""#{matcher_1.description} #{conjunction} #{matcher_2.description}"
endend# File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
  
    
      


25
26
27
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
  

  
    
      


25
26
27
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
  


  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (String)
      
      
      
    
  



  
    
      


25
26
27
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
  


    
      
  
  
    
  This method is part of a private API.This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  

  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:Returns:

  
    
      
      
        (BooleanBoolean)(Boolean)
      
      
      
    
      
      
        (Boolean)
      
      
      
    
  

  
    
      
      
        (Boolean)
      
      
      
    
  



  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


41
42
43


41
42
43
    
      


41
42
43
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41# File 'lib/rspec/matchers/built_in/compound.rb', line 41

defdef diffable?diffable?
  matcher_is_diffable?matcher_is_diffable?((matcher_1matcher_1)) |||| matcher_is_diffable?matcher_is_diffable?((matcher_2matcher_2))
endend# File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
  
    
      


41
42
43
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
  

  
    
      


41
42
43
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
  


  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


41
42
43
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
  


    
      
  
  
    
  This method is part of a private API.This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  

  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:Returns:

  
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffsRSpec::Matchers::ExpectedsForMultipleDiffs)(RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
  

  
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
  



  
Returns:

  
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
  



  
    
      


47
48
49
50


47
48
49
50
    
      


47
48
49
50
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47# File 'lib/rspec/matchers/built_in/compound.rb', line 47

defdef expectedexpected
  returnreturn nilnil unlessunless evaluatorevaluator
  ::::RSpecRSpec::::MatchersMatchers::::ExpectedsForMultipleDiffsExpectedsForMultipleDiffs..for_many_matchersfor_many_matchers((diffable_matcher_listdiffable_matcher_list))
endend# File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
  
    
      


47
48
49
50
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
  

  
    
      


47
48
49
50
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
  


  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
  



  
    
      


47
48
49
50
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
  


    
      
  
  
    
  This method is part of a private API.This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  

  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:Returns:

  
    
      
      
        (BooleanBoolean)(Boolean)
      
      
      
    
      
      
        (Boolean)
      
      
      
    
  

  
    
      
      
        (Boolean)
      
      
      
    
  



  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


34
35
36
37


34
35
36
37
    
      


34
35
36
37
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34# File 'lib/rspec/matchers/built_in/compound.rb', line 34

defdef expects_call_stack_jump?expects_call_stack_jump?
  NestedEvaluatorNestedEvaluator..matcher_expects_call_stack_jump?matcher_expects_call_stack_jump?((matcher_1matcher_1)) ||||
  NestedEvaluatorNestedEvaluator..matcher_expects_call_stack_jump?matcher_expects_call_stack_jump?((matcher_2matcher_2))
endend# File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
  
    
      


34
35
36
37
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
  

  
    
      


34
35
36
37
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
  


  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


34
35
36
37
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
  


    
      
  
  
    
  This method is part of a private API.This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  

  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:Returns:

  
    
      
      
        (BooleanBoolean)(Boolean)
      
      
      
    
      
      
        (Boolean)
      
      
      
    
  

  
    
      
      
        (Boolean)
      
      
      
    
  



  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


29
30
31
32


29
30
31
32
    
      


29
30
31
32
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29# File 'lib/rspec/matchers/built_in/compound.rb', line 29

defdef supports_block_expectations?supports_block_expectations?
  matcher_supports_block_expectations?matcher_supports_block_expectations?((matcher_1matcher_1)) &&&&
  matcher_supports_block_expectations?matcher_supports_block_expectations?((matcher_2matcher_2))
endend# File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
  
    
      


29
30
31
32
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
  

  
    
      


29
30
31
32
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
  


  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


29
30
31
32
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
  


    
  
    Instance Method Details

    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (String)
      
      
      
    
  



  
    
      


25
26
27
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


41
42
43
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
  



  
    
      


47
48
49
50
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


34
35
36
37
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


29
30
31
32
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
  


    
  

Class: RSpec::Matchers::BuiltIn::Compound
  
  
  Private


  
  
    Inherits:
    
      BaseMatcher
      
        
          Object
          
            BaseMatcher
          
            RSpec::Matchers::BuiltIn::Compound
          
        
        show all
      
    
  
  

  
  
  
  
  

  

  
  
    Defined in:
    lib/rspec/matchers/built_in/compound.rb
  
  


Overview
  
    
  This class is part of a private API.
  You should avoid using this class if possible, as it may be removed or be changed in the future.

Base class for and and or compound matchers.


  


  


  Direct Known Subclasses
  And, Or

Defined Under Namespace

  
    
  
    
      Classes: And, NestedEvaluator, Or, SequentialEvaluator
    
  




  Constant Summary
  
  Constants inherited
     from BaseMatcher
  BaseMatcher::UNDEFINED





  
    
      Instance Method Summary
      
    

    
      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
        
  
  
  
    constructor
  
  
  
  
  
  private

  
    A new instance of Compound.

  


      
        
  
  
  
  
  
  
  
  private

  
    
  


      
    
  


  
  
  
  
  
  
  
  
  Methods inherited from BaseMatcher
  #match_unless_raises, #matches?

  
  
  
  
  
  
  
  
  Methods included from BaseMatcher::DefaultFailureMessages
  #failure_message, #failure_message_when_negated

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  Methods included from Composable
  #===, #and, #description_of, #or, should_enumerate?, surface_descriptions_in, unreadable_io?, #values_match?

  Constructor Details
  
    
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.

Returns a new instance of Compound


  


  


  
    
      


10
11
12
13
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 10

def initialize(matcher_1, matcher_2)
  @matcher_1 = matcher_1
  @matcher_2 = matcher_2
end
    
  


  



  
    Instance Method Details

    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (String)
      
      
      
    
  



  
    
      


25
26
27
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 25

def description
  "#{matcher_1.description} #{conjunction} #{matcher_2.description}"
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


41
42
43
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 41

def diffable?
  matcher_is_diffable?(matcher_1) || matcher_is_diffable?(matcher_2)
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (RSpec::Matchers::ExpectedsForMultipleDiffs)
      
      
      
    
  



  
    
      


47
48
49
50
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 47

def expected
  return nil unless evaluator
  ::RSpec::Matchers::ExpectedsForMultipleDiffs.for_many_matchers(diffable_matcher_list)
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


34
35
36
37
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 34

def expects_call_stack_jump?
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_1) ||
  NestedEvaluator.matcher_expects_call_stack_jump?(matcher_2)
end
    
  


    
      
  
  
    
  This method is part of a private API.
  You should avoid using this method if possible, as it may be removed or be changed in the future.



  


  
Returns:

  
    
      
      
        (Boolean)
      
      
      
    
  



  
    
      


29
30
31
32
    
    
      # File 'lib/rspec/matchers/built_in/compound.rb', line 29

def supports_block_expectations?
  matcher_supports_block_expectations?(matcher_1) &&
  matcher_supports_block_expectations?(matcher_2)
end
    
  


    
  

