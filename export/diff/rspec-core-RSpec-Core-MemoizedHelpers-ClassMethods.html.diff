[1mdiff --git a/export/rspec-core-RSpec-Core-MemoizedHelpers-ClassMethods.html.current b/export/rspec-core-RSpec-Core-MemoizedHelpers-ClassMethods.html.new[m
[1mindex 841721e..0883fe7 100644[m
[1m--- a/export/rspec-core-RSpec-Core-MemoizedHelpers-ClassMethods.html.current[m
[1m+++ b/export/rspec-core-RSpec-Core-MemoizedHelpers-ClassMethods.html.new[m
[36m@@ -61,25 +61,20 @@[m [mModule: RSpec::Core::MemoizedHelpers::ClassMethods[m
 [m
 OverviewOverview[m
   [m
[31m-    This module is extended onto ExampleGroup, making the methods[m
[31m-available to be called from within example group blocks.[m
[31m-You can think of them as being analagous to class macros.This module is extended onto ExampleGroup, making the methods[m
[31m-available to be called from within example group blocks.[m
[31m-You can think of them as being analagous to class macros.[m
     [m
[32m+[m[32mThis module is extended onto ExampleGroup, making the methods available to be called from within example group blocks. You can think of them as being analagous to class macros.This module is extended onto ExampleGroup, making the methods available to be called from within example group blocks. You can think of them as being analagous to class macros.[m
 [m
 [m
[31m-    This module is extended onto ExampleGroup, making the methods[m
[31m-available to be called from within example group blocks.[m
[31m-You can think of them as being analagous to class macros.[m
   [m
     [m
[32m+[m[32mThis module is extended onto ExampleGroup, making the methods available to be called from within example group blocks. You can think of them as being analagous to class macros.[m
 [m
 [m
   [m
[31m-    This module is extended onto ExampleGroup, making the methods[m
[31m-available to be called from within example group blocks.[m
[31m-You can think of them as being analagous to class macros.[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[41m    [m
[32m+[m[32mThis module is extended onto ExampleGroup, making the methods available to be called from within example group blocks. You can think of them as being analagous to class macros.[m
 [m
 [m
   [m
[36m@@ -325,107 +340,75 @@[m [mJust like subject, except the block is invoked by an implicit before hook.[m
     [m
   [m
     Note:Note:[m
[31m-    letlet cancan enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[31m-let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mletlet cancan enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.let can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
[32m+[m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
     Note:[m
[31m-    let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
 [m
   [m
     Note:Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[31m-let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.let can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
     Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
   [m
     Note:Note:[m
[31m-    Because letlet is designed to create state that is reset between[m
[31m-each example, and before(:context)before(:context) is designed to setup state that[m
[31m-is shared across allall examples in an example group, letlet is notnot[m
[31m-intended to be used in a before(:context)before(:context) hook.Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
[31m-Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
[32m+[m[41m    [m
[32m+[m[32mBecause letlet is designed to create state that is reset between each example, and before(:context)before(:context) is designed to setup state that is shared across allall examples in an example group, letlet is notnot intended to be used in a before(:context)before(:context) hook.Because let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
[32m+[m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
 [m
   [m
     Note:[m
[31m-    Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
     [m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
 [m
   [m
[31m-Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.[m
[32m+[m
[32m+[m
[32m+[m[32mGenerates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.Generates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.[m
 [m
 [m
   [m
     [m
   [m
     Note:[m
[31m-    let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
[32m+[m[41m    [m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
[32m+[m
   [m
 [m
 [m
[31m-Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.[m
[32m+[m[32mGenerates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.[m
 [m
 [m
   [m
[36m@@ -434,33 +417,27 @@[m [mvalues to the same local variable.[m
     [m
   [m
     Note:[m
[31m-    let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
[32m+[m[41m    [m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
 [m
   [m
 [m
[31m-Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.[m
[32m+[m
[32m+[m[32mGenerates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.[m
 [m
 [m
   [m
[36m@@ -975,33 +952,27 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
[32m+[m[41m    [m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
 [m
   [m
 [m
[31m-Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.[m
[32m+[m
[32m+[m[32mGenerates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.[m
 [m
 [m
   [m
[36m@@ -1118,25 +1089,20 @@[m [mend[m
       [m
   [m
   [m
[31m-    Just like letlet, except the block is invoked by an implicit beforebefore[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.Just like let, except the block is invoked by an implicit before[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like letlet, except the block is invoked by an implicit beforebefore hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.Just like let, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
[32m+[m
 [m
   [m
     [m
[31m-    Just like let, except the block is invoked by an implicit before[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.[m
[32m+[m[32mJust like let, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
 [m
   [m
[31m-    Just like let, except the block is invoked by an implicit before[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like let, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -1492,9 +1458,8 @@[m [mend[m
 [m
   [m
   [m
[31m-    Just like let, except the block is invoked by an implicit before[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like let, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -1586,40 +1551,22 @@[m [mend[m
     [m
   [m
     Note:Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[31m-subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.subject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
     Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m
   [m
 [m
 [m
[31m-Declares a subjectsubject for an example group which can then be wrapped[m
[31m-with expectexpect using is_expectedis_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.Declares a subject for an example group which can then be wrapped[m
[31m-with expect using is_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.[m
[32m+[m[32mDeclares a subjectsubject for an example group which can then be wrapped with expectexpect using is_expectedis_expected to make it the target of an expectation in a concise, one-line example.Declares a subject for an example group which can then be wrapped with expect using is_expected to make it the target of an expectation in a concise, one-line example.[m
 [m
[31m-Given a namename, defines a method with that name which returns the[m
[31m-subjectsubject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.Given a name, defines a method with that name which returns the[m
[31m-subject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.[m
[32m+[m[32mGiven a namename, defines a method with that name which returns the subjectsubject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.Given a name, defines a method with that name which returns the subject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.[m
 [m
 When given a namename, calling supersuper in the block is not supported.When given a name, calling super in the block is not supported.[m
 [m
[36m@@ -1628,21 +1575,15 @@[m [mWhen given a namename, calling supersuper in the block is not supported.When giv[m
     [m
   [m
     Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
[31m-Declares a subject for an example group which can then be wrapped[m
[31m-with expect using is_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.[m
 [m
[31m-Given a name, defines a method with that name which returns the[m
[31m-subject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.[m
[32m+[m[32mDeclares a subject for an example group which can then be wrapped with expect using is_expected to make it the target of an expectation in a concise, one-line example.[m
[32m+[m
[32m+[m[32mGiven a name, defines a method with that name which returns the subject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.[m
 [m
 When given a name, calling super in the block is not supported.[m
 [m
[36m@@ -1653,21 +1594,15 @@[m [mWhen given a name, calling super in the block is not supported.[m
     [m
   [m
     Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
     [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
[31m-Declares a subject for an example group which can then be wrapped[m
[31m-with expect using is_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.[m
 [m
[31m-Given a name, defines a method with that name which returns the[m
[31m-subject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.[m
[32m+[m
[32m+[m[32mDeclares a subject for an example group which can then be wrapped with expect using is_expected to make it the target of an expectation in a concise, one-line example.[m
[32m+[m
[32m+[m[32mGiven a name, defines a method with that name which returns the subject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.[m
 [m
 When given a name, calling super in the block is not supported.[m
 [m
[36m@@ -1756,11 +1691,10 @@[m [mParameters:Parameters:[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing nameused to define an accessor with an[m
[31m-intention revealing name[m
[31m-used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing nameused to define an accessor with an intention revealing name[m
[32m+[m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -1775,8 +1709,8 @@[m [mintention revealing name[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -1824,8 +1761,8 @@[m [mdefines the value to be returned by subject in examples[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -1904,8 +1842,8 @@[m [mParameters:[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -2110,21 +2049,15 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
     [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
[31m-Declares a subject for an example group which can then be wrapped[m
[31m-with expect using is_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.[m
 [m
[31m-Given a name, defines a method with that name which returns the[m
[31m-subject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.[m
[32m+[m
[32m+[m[32mDeclares a subject for an example group which can then be wrapped with expect using is_expected to make it the target of an expectation in a concise, one-line example.[m
[32m+[m
[32m+[m[32mGiven a name, defines a method with that name which returns the subject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.[m
 [m
 When given a name, calling super in the block is not supported.[m
 [m
[36m@@ -2168,8 +2101,8 @@[m [mParameters:[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -2245,25 +2179,20 @@[m [mend[m
       [m
   [m
   [m
[31m-    Just like subjectsubject, except the block is invoked by an implicit[m
[31m-beforebefore hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.Just like subject, except the block is invoked by an implicit[m
[31m-before hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like subjectsubject, except the block is invoked by an implicit beforebefore hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.Just like subject, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
[32m+[m
 [m
   [m
     [m
[31m-    Just like subject, except the block is invoked by an implicit[m
[31m-before hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.[m
[32m+[m[32mJust like subject, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
 [m
   [m
[31m-    Just like subject, except the block is invoked by an implicit[m
[31m-before hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like subject, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -2619,9 +2548,8 @@[m [mend[m
 [m
   [m
   [m
[31m-    Just like subject, except the block is invoked by an implicit[m
[31m-before hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like subject, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -2717,33 +2645,27 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
[32m+[m[41m    [m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
 [m
   [m
 [m
[31m-Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.[m
[32m+[m
[32m+[m[32mGenerates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.[m
 [m
 [m
   [m
[36m@@ -2860,9 +2782,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Just like let, except the block is invoked by an implicit before[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like let, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -2954,21 +2875,15 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
     [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
[31m-Declares a subject for an example group which can then be wrapped[m
[31m-with expect using is_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.[m
 [m
[31m-Given a name, defines a method with that name which returns the[m
[31m-subject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.[m
[32m+[m
[32m+[m[32mDeclares a subject for an example group which can then be wrapped with expect using is_expected to make it the target of an expectation in a concise, one-line example.[m
[32m+[m
[32m+[m[32mGiven a name, defines a method with that name which returns the subject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.[m
 [m
 When given a name, calling super in the block is not supported.[m
 [m
[36m@@ -3012,8 +2927,8 @@[m [mParameters:[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -3089,9 +3005,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Just like subject, except the block is invoked by an implicit[m
[31m-before hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like subject, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -3210,9 +3125,8 @@[m [mModule: RSpec::Core::MemoizedHelpers::ClassMethods[m
 [m
 Overview[m
   [m
[31m-    This module is extended onto ExampleGroup, making the methods[m
[31m-available to be called from within example group blocks.[m
[31m-You can think of them as being analagous to class macros.[m
[32m+[m[41m    [m
[32m+[m[32mThis module is extended onto ExampleGroup, making the methods available to be called from within example group blocks. You can think of them as being analagous to class macros.[m
 [m
 [m
   [m
[36m@@ -3318,33 +3236,27 @@[m [mYou can think of them as being analagous to class macros.[m
     [m
   [m
     Note:[m
[31m-    let can enhance readability when used sparingly (1,2, or[m
[31m-maybe 3 declarations) in any given example group, but that can[m
[31m-quickly degrade with overuse. YMMV.[m
[32m+[m[41m    [m
[32m+[m[32mlet can enhance readability when used sparingly (1,2, or maybe 3 declarations) in any given example group, but that can quickly degrade with overuse. YMMV.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    let can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
[32m+[m[41m    [m
[32m+[m[32mlet can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    Because let is designed to create state that is reset between[m
[31m-each example, and before(:context) is designed to setup state that[m
[31m-is shared across all examples in an example group, let is not[m
[31m-intended to be used in a before(:context) hook.[m
     [m
[32m+[m[32mBecause let is designed to create state that is reset between each example, and before(:context) is designed to setup state that is shared across all examples in an example group, let is not intended to be used in a before(:context) hook.[m
 [m
   [m
[31m-Generates a method whose return value is memoized after the first[m
[31m-call. Useful for reducing duplication between examples that assign[m
[31m-values to the same local variable.[m
[32m+[m
[32m+[m
[32m+[m[32mGenerates a method whose return value is memoized after the first call. Useful for reducing duplication between examples that assign values to the same local variable.[m
 [m
 [m
   [m
[36m@@ -3461,9 +3373,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Just like let, except the block is invoked by an implicit before[m
[31m-hook. This serves a dual purpose of setting up state and providing a[m
[31m-memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like let, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
[36m@@ -3555,21 +3466,15 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    subject can be configured to be threadsafe or not.[m
[31m-If it is threadsafe, it will take longer to access the value.[m
[31m-If it is not threadsafe, it may behave in surprising ways in examples[m
[31m-that spawn separate threads. Specify this on RSpec.configure.[m
     [m
[32m+[m[32msubject can be configured to be threadsafe or not. If it is threadsafe, it will take longer to access the value. If it is not threadsafe, it may behave in surprising ways in examples that spawn separate threads. Specify this on RSpec.configure.[m
 [m
   [m
[31m-Declares a subject for an example group which can then be wrapped[m
[31m-with expect using is_expected to make it the target of an[m
[31m-expectation in a concise, one-line example.[m
 [m
[31m-Given a name, defines a method with that name which returns the[m
[31m-subject. This lets you declare the subject once and access it[m
[31m-implicitly in one-liners and explicitly using an intention revealing[m
[31m-name.[m
[32m+[m
[32m+[m[32mDeclares a subject for an example group which can then be wrapped with expect using is_expected to make it the target of an expectation in a concise, one-line example.[m
[32m+[m
[32m+[m[32mGiven a name, defines a method with that name which returns the subject. This lets you declare the subject once and access it implicitly in one-liners and explicitly using an intention revealing name.[m
 [m
 When given a name, calling super in the block is not supported.[m
 [m
[36m@@ -3613,8 +3518,8 @@[m [mParameters:[m
       [m
       [m
         —[m
[31m-        used to define an accessor with an[m
[31m-intention revealing name[m
[32m+[m[41m        [m
[32m+[m[32mused to define an accessor with an intention revealing name[m
 [m
       [m
     [m
[36m@@ -3690,9 +3596,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Just like subject, except the block is invoked by an implicit[m
[31m-before hook. This serves a dual purpose of setting up state and[m
[31m-providing a memoized reference to that state.[m
[32m+[m[41m    [m
[32m+[m[32mJust like subject, except the block is invoked by an implicit before hook. This serves a dual purpose of setting up state and providing a memoized reference to that state.[m
 [m
 [m
   [m
