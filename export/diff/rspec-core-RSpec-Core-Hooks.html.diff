[1mdiff --git a/export/rspec-core-RSpec-Core-Hooks.html.current b/export/rspec-core-RSpec-Core-Hooks.html.new[m
[1mindex 9f8fdba..4dac6bd 100644[m
[1m--- a/export/rspec-core-RSpec-Core-Hooks.html.current[m
[1m+++ b/export/rspec-core-RSpec-Core-Hooks.html.new[m
[36m@@ -61,37 +61,20 @@[m [mModule: RSpec::Core::Hooks[m
 [m
 OverviewOverview[m
   [m
[31m-    Provides beforebefore, afterafter and aroundaround hooks as a means of[m
[31m-supporting common setup and teardown. This module is extended[m
[31m-onto ExampleGroup, making the methods available from any describedescribe[m
[31m-or contextcontext block and included in Configuration, making them[m
[31m-available off of the configuration object to define global setup[m
[31m-or teardown logic.Provides before, after and around hooks as a means of[m
[31m-supporting common setup and teardown. This module is extended[m
[31m-onto ExampleGroup, making the methods available from any describe[m
[31m-or context block and included in Configuration, making them[m
[31m-available off of the configuration object to define global setup[m
[31m-or teardown logic.[m
     [m
[32m+[m[32mProvides beforebefore, afterafter and aroundaround hooks as a means of supporting common setup and teardown. This module is extended onto ExampleGroup, making the methods available from any describedescribe or contextcontext block and included in Configuration, making them available off of the configuration object to define global setup or teardown logic.Provides before, after and around hooks as a means of supporting common setup and teardown. This module is extended onto ExampleGroup, making the methods available from any describe or context block and included in Configuration, making them available off of the configuration object to define global setup or teardown logic.[m
 [m
 [m
[31m-    Provides before, after and around hooks as a means of[m
[31m-supporting common setup and teardown. This module is extended[m
[31m-onto ExampleGroup, making the methods available from any describe[m
[31m-or context block and included in Configuration, making them[m
[31m-available off of the configuration object to define global setup[m
[31m-or teardown logic.[m
   [m
     [m
[32m+[m[32mProvides before, after and around hooks as a means of supporting common setup and teardown. This module is extended onto ExampleGroup, making the methods available from any describe or context block and included in Configuration, making them available off of the configuration object to define global setup or teardown logic.[m
 [m
 [m
   [m
[31m-    Provides before, after and around hooks as a means of[m
[31m-supporting common setup and teardown. This module is extended[m
[31m-onto ExampleGroup, making the methods available from any describe[m
[31m-or context block and included in Configuration, making them[m
[31m-available off of the configuration object to define global setup[m
[31m-or teardown logic.[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[41m    [m
[32m+[m[32mProvides before, after and around hooks as a means of supporting common setup and teardown. This module is extended onto ExampleGroup, making the methods available from any describe or context block and included in Configuration, making them available off of the configuration object to define global setup or teardown logic.[m
 [m
 [m
   [m
[36m@@ -387,63 +395,42 @@[m [mAdds block to the front of the list of before blocks in the same scope (:example[m
     [m
   [m
     Note:Note:[m
[31m-    The :example:example and :context:context scopes are also available as[m
[31m-:each:each and :all:all, respectively. Use whichever you prefer.The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[31m-The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example:example and :context:context scopes are also available as :each:each and :all:all, respectively. Use whichever you prefer.The :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
[32m+[m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:Note:[m
[31m-    The :suite:suite scope is only supported for hooks registered on[m
[31m-RSpec.configurationRSpec.configuration since they exist independently of any[m
[31m-example or example group.The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[31m-The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite:suite scope is only supported for hooks registered on RSpec.configurationRSpec.configuration since they exist independently of any example or example group.The :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
[32m+[m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
[32m+[m
   [m
 [m
 [m
[31m-Declare a block of code to be run after each example (using :example:example)[m
[31m-or once after all examples n the context (using :context:context). See[m
[31m-#before for more information about ordering.Declare a block of code to be run after each example (using :example)[m
[31m-or once after all examples n the context (using :context). See[m
[31m-#before for more information about ordering.[m
[32m+[m[32mDeclare a block of code to be run after each example (using :example:example) or once after all examples n the context (using :context:context). See #before for more information about ordering.Declare a block of code to be run after each example (using :example) or once after all examples n the context (using :context). See #before for more information about ordering.[m
 [m
 ExceptionsExceptions[m
 [m
[31m-afterafter hooks are guaranteed to run even when there are exceptions in[m
[31m-beforebefore hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-afterafter blocks are run.after hooks are guaranteed to run even when there are exceptions in[m
[31m-before hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-after blocks are run.[m
[32m+[m[32mafterafter hooks are guaranteed to run even when there are exceptions in beforebefore hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent afterafter blocks are run.after hooks are guaranteed to run even when there are exceptions in before hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent after blocks are run.[m
 [m
 OrderOrder[m
 [m
[31m-after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mafter hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.after hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 afterafter((:example:example)) # Declared in the current group.[m
 # Declared in the current group.[m
[36m@@ -475,49 +462,35 @@[m [mafter(:context) # Declared in RSpec.configure.[m
 after(:suite)   # Declared in RSpec.configure.[m
 [m
 [m
[31m-This is the reverse of the order in which beforebefore hooks are run.[m
[31m-Similarly, if more than one afterafter is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-aroundaround hooks will all have run before any after hooks are invoked.This is the reverse of the order in which before hooks are run.[m
[31m-Similarly, if more than one after is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-around hooks will all have run before any after hooks are invoked.[m
[32m+[m[32mThis is the reverse of the order in which beforebefore hooks are run. Similarly, if more than one afterafter is declared within any one scope, they are run in reverse order of that in which they are declared. Also aroundaround hooks will all have run before any after hooks are invoked.This is the reverse of the order in which before hooks are run. Similarly, if more than one after is declared within any one scope, they are run in reverse order of that in which they are declared. Also around hooks will all have run before any after hooks are invoked.[m
 [m
 [m
   [m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
 [m
[31m-Declare a block of code to be run after each example (using :example)[m
[31m-or once after all examples n the context (using :context). See[m
[31m-#before for more information about ordering.[m
[32m+[m
[32m+[m[32mDeclare a block of code to be run after each example (using :example) or once after all examples n the context (using :context). See #before for more information about ordering.[m
 [m
 Exceptions[m
 [m
[31m-after hooks are guaranteed to run even when there are exceptions in[m
[31m-before hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-after blocks are run.[m
[32m+[m[32mafter hooks are guaranteed to run even when there are exceptions in before hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent after blocks are run.[m
 [m
 Order[m
 [m
[31m-after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mafter hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 after(:example) # Declared in the current group.[m
 after(:example) # Declared in a parent group.[m
[36m@@ -528,10 +501,7 @@[m [mafter(:context) # Declared in RSpec.configure.[m
 after(:suite)   # Declared in RSpec.configure.[m
 [m
 [m
[31m-This is the reverse of the order in which before hooks are run.[m
[31m-Similarly, if more than one after is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-around hooks will all have run before any after hooks are invoked.[m
[32m+[m[32mThis is the reverse of the order in which before hooks are run. Similarly, if more than one after is declared within any one scope, they are run in reverse order of that in which they are declared. Also around hooks will all have run before any after hooks are invoked.[m
 [m
 [m
   [m
[36m@@ -540,36 +510,28 @@[m [maround hooks will all have run before any after hooks are invoked.[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
     [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
[31m-Declare a block of code to be run after each example (using :example)[m
[31m-or once after all examples n the context (using :context). See[m
[31m-#before for more information about ordering.[m
[32m+[m
[32m+[m
[32m+[m[32mDeclare a block of code to be run after each example (using :example) or once after all examples n the context (using :context). See #before for more information about ordering.[m
 [m
 Exceptions[m
 [m
[31m-after hooks are guaranteed to run even when there are exceptions in[m
[31m-before hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-after blocks are run.[m
[32m+[m[32mafter hooks are guaranteed to run even when there are exceptions in before hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent after blocks are run.[m
 [m
 Order[m
 [m
[31m-after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mafter hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 after(:example) # Declared in the current group.[m
 after(:example) # Declared in a parent group.[m
[36m@@ -580,10 +542,7 @@[m [mafter(:context) # Declared in RSpec.configure.[m
 after(:suite)   # Declared in RSpec.configure.[m
 [m
 [m
[31m-This is the reverse of the order in which before hooks are run.[m
[31m-Similarly, if more than one after is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-around hooks will all have run before any after hooks are invoked.[m
[32m+[m[32mThis is the reverse of the order in which before hooks are run. Similarly, if more than one after is declared within any one scope, they are run in reverse order of that in which they are declared. Also around hooks will all have run before any after hooks are invoked.[m
 [m
 [m
   [m
[36m@@ -625,11 +584,10 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example:example, :context:context, or :suite:suite (defaults to[m
[31m-:example:example):example, :context, or :suite (defaults to[m
[31m-:example)[m
[31m-:example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example:example, :context:context, or :suite:suite (defaults to :example:example):example, :context, or :suite (defaults to :example)[m
[32m+[m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -642,8 +600,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -660,8 +618,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -683,8 +641,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -715,8 +673,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -758,11 +716,10 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example:example, :context:context, or :suite:suite (defaults to[m
[31m-:example:example):example, :context, or :suite (defaults to[m
[31m-:example)[m
[31m-:example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example:example, :context:context, or :suite:suite (defaults to :example:example):example, :context, or :suite (defaults to :example)[m
[32m+[m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -775,8 +732,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -791,14 +748,10 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... }after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[31m-constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... }after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
[32m+[m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -811,9 +764,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -830,8 +782,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -846,9 +798,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -870,8 +821,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -886,9 +837,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -919,8 +869,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -935,9 +885,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -979,14 +928,10 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... }after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[31m-constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... }after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
[32m+[m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -999,9 +944,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1018,9 +962,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1042,9 +985,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1075,9 +1017,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1114,8 +1055,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -1149,8 +1090,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -1165,9 +1106,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1201,9 +1141,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1277,8 +1216,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -1312,8 +1251,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -1328,9 +1267,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1364,9 +1302,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1478,36 +1415,28 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
 [m
[31m-Declare a block of code to be run after each example (using :example)[m
[31m-or once after all examples n the context (using :context). See[m
[31m-#before for more information about ordering.[m
[32m+[m
[32m+[m[32mDeclare a block of code to be run after each example (using :example) or once after all examples n the context (using :context). See #before for more information about ordering.[m
 [m
 Exceptions[m
 [m
[31m-after hooks are guaranteed to run even when there are exceptions in[m
[31m-before hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-after blocks are run.[m
[32m+[m[32mafter hooks are guaranteed to run even when there are exceptions in before hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent after blocks are run.[m
 [m
 Order[m
 [m
[31m-after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mafter hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 after(:example) # Declared in the current group.[m
 after(:example) # Declared in a parent group.[m
[36m@@ -1518,10 +1447,7 @@[m [mafter(:context) # Declared in RSpec.configure.[m
 after(:suite)   # Declared in RSpec.configure.[m
 [m
 [m
[31m-This is the reverse of the order in which before hooks are run.[m
[31m-Similarly, if more than one after is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-around hooks will all have run before any after hooks are invoked.[m
[32m+[m[32mThis is the reverse of the order in which before hooks are run. Similarly, if more than one after is declared within any one scope, they are run in reverse order of that in which they are declared. Also around hooks will all have run before any after hooks are invoked.[m
 [m
 [m
   [m
[36m@@ -1555,8 +1481,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -1590,8 +1516,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -1606,9 +1532,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1642,9 +1567,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -1699,16 +1623,15 @@[m [mend[m
       [m
   [m
   [m
[31m-    Adds blockblock to the back of the list of afterafter blocks in the same[m
[31m-scope (:example:example, :context:context, or :suite:suite).Adds block to the back of the list of after blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds blockblock to the back of the list of afterafter blocks in the same scope (:example:example, :context:context, or :suite:suite).Adds block to the back of the list of after blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #after for scoping semantics.See #after for scoping semantics.[m
 [m
 [m
   [m
[31m-    Adds block to the back of the list of after blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the back of the list of after blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #after for scoping semantics.[m
 [m
[36m@@ -1716,8 +1639,8 @@[m [mSee #after for scoping semantics.[m
   [m
 [m
   [m
[31m-    Adds block to the back of the list of after blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the back of the list of after blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #after for scoping semantics.[m
 [m
[36m@@ -1808,8 +1731,8 @@[m [mend[m
 [m
   [m
   [m
[31m-    Adds block to the back of the list of after blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the back of the list of after blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #after for scoping semantics.[m
 [m
[36m@@ -1846,36 +1769,15 @@[m [mend[m
     [m
   [m
     Note:Note:[m
[31m-    the syntax of aroundaround is similar to that of beforebefore and afterafter[m
[31m-but the semantics are quite different. beforebefore and afterafter hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas aroundaround hooks are actually responsible for running the[m
[31m-examples. Consequently, aroundaround hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated beforebefore and afterafter hooks.the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[31m-the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of aroundaround is similar to that of beforebefore and afterafter but the semantics are quite different. beforebefore and afterafter hooks are run in the context of of the examples with which they are associated, whereas aroundaround hooks are actually responsible for running the examples. Consequently, aroundaround hooks do not have direct access to resources that are made available within the examples and their associated beforebefore and afterafter hooks.the syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
[32m+[m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
     Note:[m
[31m-    the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
 [m
[36m@@ -1890,36 +1795,29 @@[m [massociated before and after hooks.[m
 [m
   [m
 [m
[31m-Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.[m
[32m+[m
[32m+[m[32mDeclare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.Declare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.[m
 [m
 aroundaround((:example:example)) dodo ||exex||[m
   # Do some stuff before.[m
 # Do some stuff before.[m
[31m-  exex..runrun[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  exex..runrun  # Do some stuff after.[m
 # Do some stuff after.[m
[32m+[m
 endend[m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 [m
 [m
[31m-The yielded example aliases runrun with callcall, which lets you treat it[m
[31m-like a ProcProc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.The yielded example aliases run with call, which lets you treat it[m
[31m-like a Proc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.[m
[32m+[m[32mThe yielded example aliases runrun with callcall, which lets you treat it like a ProcProc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.The yielded example aliases run with call, which lets you treat it like a Proc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.[m
 [m
 aroundaround((:example:example)) {{||exex|| DatabaseDatabase..transactiontransaction((&&exex))}}[m
 aroundaround((:example:example)) {{||exex|| FakeFSFakeFS((&&exex))}}[m
[36m@@ -1931,9 +1829,7 @@[m [maround(:example) {|ex| FakeFS(&ex)}[m
 [m
 OrderOrder[m
 [m
[31m-All aroundaround hooks execute immediately surrounding an example, this means[m
[31m-that all beforebefore hooks will have run and no afterafter hooks will have run yet.All around hooks execute immediately surrounding an example, this means[m
[31m-that all before hooks will have run and no after hooks will have run yet.[m
[32m+[m[32mAll aroundaround hooks execute immediately surrounding an example, this means that all beforebefore hooks will have run and no afterafter hooks will have run yet.All around hooks execute immediately surrounding an example, this means that all before hooks will have run and no after hooks will have run yet.[m
 [m
 They are not a synonym for beforebefore/afterafter.They are not a synonym for before/after.[m
 [m
[36m@@ -1942,13 +1838,8 @@[m [mThey are not a synonym for beforebefore/afterafter.They are not a synonym for be[m
     [m
   [m
     Note:[m
[31m-    the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
 [m
[36m@@ -1958,20 +1850,17 @@[m [massociated before and after hooks.[m
 [m
   [m
 [m
[31m-Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.[m
[32m+[m
[32m+[m[32mDeclare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.[m
 [m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 [m
 [m
[31m-The yielded example aliases run with call, which lets you treat it[m
[31m-like a Proc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.[m
[32m+[m[32mThe yielded example aliases run with call, which lets you treat it like a Proc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.[m
 [m
 around(:example) {|ex| Database.transaction(&ex)}[m
 around(:example) {|ex| FakeFS(&ex)}[m
[36m@@ -1979,8 +1868,7 @@[m [maround(:example) {|ex| FakeFS(&ex)}[m
 [m
 Order[m
 [m
[31m-All around hooks execute immediately surrounding an example, this means[m
[31m-that all before hooks will have run and no after hooks will have run yet.[m
[32m+[m[32mAll around hooks execute immediately surrounding an example, this means that all before hooks will have run and no after hooks will have run yet.[m
 [m
 They are not a synonym for before/after.[m
 [m
[36m@@ -1991,13 +1879,8 @@[m [mThey are not a synonym for before/after.[m
     [m
   [m
     Note:[m
[31m-    the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
 [m
[36m@@ -2007,20 +1891,17 @@[m [massociated before and after hooks.[m
 [m
   [m
 [m
[31m-Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.[m
[32m+[m
[32m+[m[32mDeclare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.[m
 [m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 [m
 [m
[31m-The yielded example aliases run with call, which lets you treat it[m
[31m-like a Proc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.[m
[32m+[m[32mThe yielded example aliases run with call, which lets you treat it like a Proc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.[m
 [m
 around(:example) {|ex| Database.transaction(&ex)}[m
 around(:example) {|ex| FakeFS(&ex)}[m
[36m@@ -2028,8 +1909,7 @@[m [maround(:example) {|ex| FakeFS(&ex)}[m
 [m
 Order[m
 [m
[31m-All around hooks execute immediately surrounding an example, this means[m
[31m-that all before hooks will have run and no after hooks will have run yet.[m
[32m+[m[32mAll around hooks execute immediately surrounding an example, this means that all before hooks will have run and no after hooks will have run yet.[m
 [m
 They are not a synonym for before/after.[m
 [m
[36m@@ -2073,14 +1953,10 @@[m [mThey are not a synonym for before/after.[m
       [m
       [m
         —[m
[31m-        :example:example (defaults to :example:example)[m
[31m-present for syntax parity with beforebefore and afterafter, but[m
[31m-:example:example/:each:each is the only supported value.:example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[31m-:example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example:example (defaults to :example:example) present for syntax parity with beforebefore and afterafter, but :example:example/:each:each is the only supported value.:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
[32m+[m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2093,9 +1969,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2112,9 +1987,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2136,9 +2010,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2169,9 +2042,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2213,14 +2085,10 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example:example (defaults to :example:example)[m
[31m-present for syntax parity with beforebefore and afterafter, but[m
[31m-:example:example/:each:each is the only supported value.:example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[31m-:example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example:example (defaults to :example:example) present for syntax parity with beforebefore and afterafter, but :example:example/:each:each is the only supported value.:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
[32m+[m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2233,9 +2101,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2250,14 +2117,10 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... }around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[31m-constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... }around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
[32m+[m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2270,9 +2133,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2289,9 +2151,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2306,9 +2167,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2330,9 +2190,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2347,9 +2206,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2380,9 +2238,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2397,9 +2254,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2441,14 +2297,10 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... }around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[31m-constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... }around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
[32m+[m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2461,9 +2313,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2480,9 +2331,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2504,9 +2354,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2537,9 +2386,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2576,9 +2424,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2612,9 +2459,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2629,9 +2475,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2665,9 +2510,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2754,9 +2602,8 @@[m [mthe example to run[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2790,9 +2637,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -2807,9 +2653,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2843,9 +2688,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -2957,13 +2802,8 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
 [m
[36m@@ -2973,20 +2814,17 @@[m [massociated before and after hooks.[m
 [m
   [m
 [m
[31m-Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.[m
[32m+[m
[32m+[m[32mDeclare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.[m
 [m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 [m
 [m
[31m-The yielded example aliases run with call, which lets you treat it[m
[31m-like a Proc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.[m
[32m+[m[32mThe yielded example aliases run with call, which lets you treat it like a Proc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.[m
 [m
 around(:example) {|ex| Database.transaction(&ex)}[m
 around(:example) {|ex| FakeFS(&ex)}[m
[36m@@ -2994,8 +2832,7 @@[m [maround(:example) {|ex| FakeFS(&ex)}[m
 [m
 Order[m
 [m
[31m-All around hooks execute immediately surrounding an example, this means[m
[31m-that all before hooks will have run and no after hooks will have run yet.[m
[32m+[m[32mAll around hooks execute immediately surrounding an example, this means that all before hooks will have run and no after hooks will have run yet.[m
 [m
 They are not a synonym for before/after.[m
 [m
[36m@@ -3031,9 +2868,8 @@[m [mThey are not a synonym for before/after.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -3067,9 +2903,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -3084,9 +2919,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -3120,9 +2954,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -3180,63 +3014,42 @@[m [mend[m
     [m
   [m
     Note:Note:[m
[31m-    The :example:example and :context:context scopes are also available as[m
[31m-:each:each and :all:all, respectively. Use whichever you prefer.The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[31m-The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example:example and :context:context scopes are also available as :each:each and :all:all, respectively. Use whichever you prefer.The :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
[32m+[m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:Note:[m
[31m-    The :suite:suite scope is only supported for hooks registered on[m
[31m-RSpec.configurationRSpec.configuration since they exist independently of any[m
[31m-example or example group.The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[31m-The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite:suite scope is only supported for hooks registered on RSpec.configurationRSpec.configuration since they exist independently of any example or example group.The :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
[32m+[m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
     [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
[31m-Declare a block of code to be run before each example (using :example:example)[m
[31m-or once before any example (using :context:context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.Declare a block of code to be run before each example (using :example)[m
[31m-or once before any example (using :context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.[m
 [m
[31m-You can also use before(:suite)before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.You can also use before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.[m
 [m
[31m-Instance variables declared in before(:example)before(:example) or before(:context)before(:context)[m
[31m-are accessible within each example.Instance variables declared in before(:example) or before(:context)[m
[31m-are accessible within each example.[m
[32m+[m[32mDeclare a block of code to be run before each example (using :example:example) or once before any example (using :context:context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.Declare a block of code to be run before each example (using :example) or once before any example (using :context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.[m
[32m+[m
[32m+[m[32mYou can also use before(:suite)before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.You can also use before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.[m
[32m+[m
[32m+[m[32mInstance variables declared in before(:example)before(:example) or before(:context)before(:context) are accessible within each example.Instance variables declared in before(:example) or before(:context) are accessible within each example.[m
 [m
 OrderOrder[m
 [m
[31m-before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mbefore hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.before hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 beforebefore((:suite:suite))    # Declared in RSpec.configure.[m
 # Declared in RSpec.configure.[m
[36m@@ -3268,19 +3081,11 @@[m [mbefore(:example)  # Declared in a parent group.[m
 before(:example)  # Declared in the current group.[m
 [m
 [m
[31m-If more than one beforebefore is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any aroundaround hooks will execute[m
[31m-later than any beforebefore hook regardless of scope.If more than one before is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any around hooks will execute[m
[31m-later than any before hook regardless of scope.[m
[32m+[m[32mIf more than one beforebefore is declared within any one scope, they are run in the order in which they are declared. Any aroundaround hooks will execute later than any beforebefore hook regardless of scope.If more than one before is declared within any one scope, they are run in the order in which they are declared. Any around hooks will execute later than any before hook regardless of scope.[m
 [m
 ConditionsConditions[m
 [m
[31m-When you add a conditions hash to before(:example)before(:example) or[m
[31m-before(:context)before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.When you add a conditions hash to before(:example) or[m
[31m-before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.[m
[32m+[m[32mWhen you add a conditions hash to before(:example)before(:example) or before(:context)before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.When you add a conditions hash to before(:example) or before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.[m
 [m
 RSpecRSpec..configureconfigure dodo ||configconfig||[m
   configconfig..beforebefore((:example:example,, :authorized:authorized =>=> truetrue)) dodo[m
[36m@@ -3344,145 +3149,88 @@[m [mRSpec.describe SomethingElse do[m
 end[m
 [m
 [m
[31m-Note that filtered config :context:context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.Note that filtered config :context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.[m
[32m+[m[32mNote that filtered config :context:context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.Note that filtered config :context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.[m
 [m
 Warning: before(:suite, :with => :conditions)before(:suite, :with => :conditions)Warning: before(:suite, :with => :conditions)[m
 [m
[31m-The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite)before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite:suite are effectively ignored.The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite are effectively ignored.[m
[32m+[m[32mThe conditions hash is used to match against specific examples. Since before(:suite)before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite:suite are effectively ignored.The conditions hash is used to match against specific examples. Since before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite are effectively ignored.[m
 [m
 ExceptionsExceptions[m
 [m
[31m-When an exception is raised in a beforebefore block, RSpec skips any[m
[31m-subsequent beforebefore blocks and the example, but runs all of the[m
[31m-after(:example)after(:example) and after(:context)after(:context) hooks.When an exception is raised in a before block, RSpec skips any[m
[31m-subsequent before blocks and the example, but runs all of the[m
[31m-after(:example) and after(:context) hooks.[m
[32m+[m[32mWhen an exception is raised in a beforebefore block, RSpec skips any subsequent beforebefore blocks and the example, but runs all of the after(:example)after(:example) and after(:context)after(:context) hooks.When an exception is raised in a before block, RSpec skips any subsequent before blocks and the example, but runs all of the after(:example) and after(:context) hooks.[m
 [m
 Warning: implicit before blocksWarning: implicit before blocks[m
 [m
[31m-beforebefore hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.before hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.[m
[32m+[m[32mbeforebefore hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.before hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.[m
 [m
 Warning: before(:context)before(:context)Warning: before(:context)[m
 [m
[31m-It is very tempting to use before(:context)before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.It is very tempting to use before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.[m
[32m+[m[32mIt is very tempting to use before(:context)before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.It is very tempting to use before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.[m
 [m
 ContextContext[m
 [m
[31m-before(:context)before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.[m
[32m+[m[32mbefore(:context)before(:context) is run in an example that is generated to provide group context for the block.before(:context) is run in an example that is generated to provide group context for the block.[m
 [m
 Instance variablesInstance variables[m
 [m
[31m-Instance variables declared in before(:context)before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.Instance variables declared in before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.[m
[32m+[m[32mInstance variables declared in before(:context)before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.Instance variables declared in before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.[m
 [m
 Unsupported RSpec constructsUnsupported RSpec constructs[m
 [m
[31m-RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.[m
[32m+[m[32mRSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.RSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.[m
[32m+[m
[32m+[m[32mlet declarations.let declarations.[m
[32m+[m
[32m+[m[32mlet declarations.[m
[32m+[m
[32m+[m[32msubject declarations.subject declarations.[m
 [m
[32m+[m[32msubject declarations.[m
 [m
[31m-letlet declarationslet declarations[m
[31m-subjectsubject declarationssubject declarations[m
[31m-Any mocking, stubbing or test double declarationAny mocking, stubbing or test double declaration[m
[32m+[m[32mAny mocking, stubbing or test double declaration.Any mocking, stubbing or test double declaration.[m
 [m
[31m-let declarations[m
[31m-subject declarations[m
[31m-Any mocking, stubbing or test double declaration[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
[32m+[m
[32m+[m[32mlet declarations.[m
[32m+[m
[32m+[m[32msubject declarations.[m
[32m+[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
 [m
 [m
 other frameworksother frameworks[m
 [m
[31m-Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context)before(:context), but get torn down before the first real example is[m
[31m-ever run.Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context), but get torn down before the first real example is[m
[31m-ever run.[m
[32m+[m[32mMock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context)before(:context), but get torn down before the first real example is ever run.Mock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context), but get torn down before the first real example is ever run.[m
 [m
[31m-You cancan create database-backed model objects in a before(:context)before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context)after(:context) block.You can create database-backed model objects in a before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context) block.[m
[32m+[m[32mYou cancan create database-backed model objects in a before(:context)before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context)after(:context) block.You can create database-backed model objects in a before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context) block.[m
 [m
 [m
   [m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
     [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
[31m-Declare a block of code to be run before each example (using :example)[m
[31m-or once before any example (using :context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.[m
 [m
[31m-You can also use before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.[m
 [m
[31m-Instance variables declared in before(:example) or before(:context)[m
[31m-are accessible within each example.[m
[32m+[m[32mDeclare a block of code to be run before each example (using :example) or once before any example (using :context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.[m
[32m+[m
[32m+[m[32mYou can also use before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.[m
[32m+[m
[32m+[m[32mInstance variables declared in before(:example) or before(:context) are accessible within each example.[m
 [m
 Order[m
 [m
[31m-before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mbefore hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 before(:suite)    # Declared in RSpec.configure.[m
 before(:context)  # Declared in RSpec.configure.[m
[36m@@ -3493,15 +3241,11 @@[m [mbefore(:example)  # Declared in a parent group.[m
 before(:example)  # Declared in the current group.[m
 [m
 [m
[31m-If more than one before is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any around hooks will execute[m
[31m-later than any before hook regardless of scope.[m
[32m+[m[32mIf more than one before is declared within any one scope, they are run in the order in which they are declared. Any around hooks will execute later than any before hook regardless of scope.[m
 [m
 Conditions[m
 [m
[31m-When you add a conditions hash to before(:example) or[m
[31m-before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.[m
[32m+[m[32mWhen you add a conditions hash to before(:example) or before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.[m
 [m
 RSpec.configure do |config|[m
   config.before(:example, :authorized => true) do[m
[36m@@ -3524,76 +3268,48 @@[m [mRSpec.describe SomethingElse do[m
 end[m
 [m
 [m
[31m-Note that filtered config :context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.[m
[32m+[m[32mNote that filtered config :context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.[m
 [m
 Warning: before(:suite, :with => :conditions)[m
 [m
[31m-The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite are effectively ignored.[m
[32m+[m[32mThe conditions hash is used to match against specific examples. Since before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite are effectively ignored.[m
 [m
 Exceptions[m
 [m
[31m-When an exception is raised in a before block, RSpec skips any[m
[31m-subsequent before blocks and the example, but runs all of the[m
[31m-after(:example) and after(:context) hooks.[m
[32m+[m[32mWhen an exception is raised in a before block, RSpec skips any subsequent before blocks and the example, but runs all of the after(:example) and after(:context) hooks.[m
 [m
 Warning: implicit before blocks[m
 [m
[31m-before hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.[m
[32m+[m[32mbefore hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.[m
 [m
 Warning: before(:context)[m
 [m
[31m-It is very tempting to use before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.[m
[32m+[m[32mIt is very tempting to use before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.[m
 [m
 Context[m
 [m
[31m-before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.[m
[32m+[m[32mbefore(:context) is run in an example that is generated to provide group context for the block.[m
 [m
 Instance variables[m
 [m
[31m-Instance variables declared in before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.[m
[32m+[m[32mInstance variables declared in before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.[m
 [m
 Unsupported RSpec constructs[m
 [m
[31m-RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.[m
[32m+[m[32mRSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.[m
[32m+[m
[32m+[m[32mlet declarations.[m
 [m
[32m+[m[32msubject declarations.[m
 [m
[31m-let declarations[m
[31m-subject declarations[m
[31m-Any mocking, stubbing or test double declaration[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
 [m
 [m
 other frameworks[m
 [m
[31m-Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context), but get torn down before the first real example is[m
[31m-ever run.[m
[32m+[m[32mMock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context), but get torn down before the first real example is ever run.[m
 [m
[31m-You can create database-backed model objects in a before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context) block.[m
[32m+[m[32mYou can create database-backed model objects in a before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context) block.[m
 [m
 [m
   [m
[36m@@ -3602,36 +3318,28 @@[m [myou are on your own to clean up in an after(:context) block.[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
 [m
[31m-Declare a block of code to be run before each example (using :example)[m
[31m-or once before any example (using :context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.[m
 [m
[31m-You can also use before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.[m
[32m+[m[32mDeclare a block of code to be run before each example (using :example) or once before any example (using :context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.[m
 [m
[31m-Instance variables declared in before(:example) or before(:context)[m
[31m-are accessible within each example.[m
[32m+[m[32mYou can also use before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.[m
[32m+[m
[32m+[m[32mInstance variables declared in before(:example) or before(:context) are accessible within each example.[m
 [m
 Order[m
 [m
[31m-before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mbefore hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 before(:suite)    # Declared in RSpec.configure.[m
 before(:context)  # Declared in RSpec.configure.[m
[36m@@ -3642,15 +3350,11 @@[m [mbefore(:example)  # Declared in a parent group.[m
 before(:example)  # Declared in the current group.[m
 [m
 [m
[31m-If more than one before is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any around hooks will execute[m
[31m-later than any before hook regardless of scope.[m
[32m+[m[32mIf more than one before is declared within any one scope, they are run in the order in which they are declared. Any around hooks will execute later than any before hook regardless of scope.[m
 [m
 Conditions[m
 [m
[31m-When you add a conditions hash to before(:example) or[m
[31m-before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.[m
[32m+[m[32mWhen you add a conditions hash to before(:example) or before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.[m
 [m
 RSpec.configure do |config|[m
   config.before(:example, :authorized => true) do[m
[36m@@ -3673,76 +3377,48 @@[m [mRSpec.describe SomethingElse do[m
 end[m
 [m
 [m
[31m-Note that filtered config :context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.[m
[32m+[m[32mNote that filtered config :context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.[m
 [m
 Warning: before(:suite, :with => :conditions)[m
 [m
[31m-The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite are effectively ignored.[m
[32m+[m[32mThe conditions hash is used to match against specific examples. Since before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite are effectively ignored.[m
 [m
 Exceptions[m
 [m
[31m-When an exception is raised in a before block, RSpec skips any[m
[31m-subsequent before blocks and the example, but runs all of the[m
[31m-after(:example) and after(:context) hooks.[m
[32m+[m[32mWhen an exception is raised in a before block, RSpec skips any subsequent before blocks and the example, but runs all of the after(:example) and after(:context) hooks.[m
 [m
 Warning: implicit before blocks[m
 [m
[31m-before hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.[m
[32m+[m[32mbefore hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.[m
 [m
 Warning: before(:context)[m
 [m
[31m-It is very tempting to use before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.[m
[32m+[m[32mIt is very tempting to use before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.[m
 [m
 Context[m
 [m
[31m-before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.[m
[32m+[m[32mbefore(:context) is run in an example that is generated to provide group context for the block.[m
 [m
 Instance variables[m
 [m
[31m-Instance variables declared in before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.[m
[32m+[m[32mInstance variables declared in before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.[m
 [m
 Unsupported RSpec constructs[m
 [m
[31m-RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.[m
[32m+[m[32mRSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.[m
[32m+[m
[32m+[m[32mlet declarations.[m
 [m
[32m+[m[32msubject declarations.[m
 [m
[31m-let declarations[m
[31m-subject declarations[m
[31m-Any mocking, stubbing or test double declaration[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
 [m
 [m
 other frameworks[m
 [m
[31m-Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context), but get torn down before the first real example is[m
[31m-ever run.[m
[32m+[m[32mMock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context), but get torn down before the first real example is ever run.[m
 [m
[31m-You can create database-backed model objects in a before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context) block.[m
[32m+[m[32mYou can create database-backed model objects in a before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context) block.[m
 [m
 [m
   [m
[36m@@ -3925,11 +3607,10 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example:example, :context:context, or :suite:suite[m
[31m-(defaults to :example:example):example, :context, or :suite[m
[31m-(defaults to :example)[m
[31m-:example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example:example, :context:context, or :suite:suite (defaults to :example:example):example, :context, or :suite (defaults to :example)[m
[32m+[m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -3942,8 +3623,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -3960,8 +3641,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -3983,8 +3664,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4015,8 +3696,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4058,11 +3739,10 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example:example, :context:context, or :suite:suite[m
[31m-(defaults to :example:example):example, :context, or :suite[m
[31m-(defaults to :example)[m
[31m-:example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example:example, :context:context, or :suite:suite (defaults to :example:example):example, :context, or :suite (defaults to :example)[m
[32m+[m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4075,8 +3755,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4091,14 +3771,10 @@[m [mend[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... }before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[31m-constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... }before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
[32m+[m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4111,9 +3787,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4130,8 +3805,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4146,9 +3821,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4170,8 +3844,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4186,9 +3860,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4219,8 +3892,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4235,9 +3908,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4279,14 +3951,10 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... }before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[31m-constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... }before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true:ui => true.constrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
[32m+[m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4299,9 +3967,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4318,9 +3985,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4342,9 +4008,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4375,9 +4040,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4414,8 +4078,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4449,8 +4113,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4465,9 +4129,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4501,9 +4164,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4620,8 +4284,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4655,8 +4319,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -4671,9 +4335,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4707,9 +4370,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -4821,36 +4483,28 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
     [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
[31m-Declare a block of code to be run before each example (using :example)[m
[31m-or once before any example (using :context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.[m
 [m
[31m-You can also use before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.[m
 [m
[31m-Instance variables declared in before(:example) or before(:context)[m
[31m-are accessible within each example.[m
[32m+[m[32mDeclare a block of code to be run before each example (using :example) or once before any example (using :context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.[m
[32m+[m
[32m+[m[32mYou can also use before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.[m
[32m+[m
[32m+[m[32mInstance variables declared in before(:example) or before(:context) are accessible within each example.[m
 [m
 Order[m
 [m
[31m-before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mbefore hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 before(:suite)    # Declared in RSpec.configure.[m
 before(:context)  # Declared in RSpec.configure.[m
[36m@@ -4861,15 +4515,11 @@[m [mbefore(:example)  # Declared in a parent group.[m
 before(:example)  # Declared in the current group.[m
 [m
 [m
[31m-If more than one before is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any around hooks will execute[m
[31m-later than any before hook regardless of scope.[m
[32m+[m[32mIf more than one before is declared within any one scope, they are run in the order in which they are declared. Any around hooks will execute later than any before hook regardless of scope.[m
 [m
 Conditions[m
 [m
[31m-When you add a conditions hash to before(:example) or[m
[31m-before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.[m
[32m+[m[32mWhen you add a conditions hash to before(:example) or before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.[m
 [m
 RSpec.configure do |config|[m
   config.before(:example, :authorized => true) do[m
[36m@@ -4892,76 +4542,48 @@[m [mRSpec.describe SomethingElse do[m
 end[m
 [m
 [m
[31m-Note that filtered config :context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.[m
[32m+[m[32mNote that filtered config :context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.[m
 [m
 Warning: before(:suite, :with => :conditions)[m
 [m
[31m-The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite are effectively ignored.[m
[32m+[m[32mThe conditions hash is used to match against specific examples. Since before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite are effectively ignored.[m
 [m
 Exceptions[m
 [m
[31m-When an exception is raised in a before block, RSpec skips any[m
[31m-subsequent before blocks and the example, but runs all of the[m
[31m-after(:example) and after(:context) hooks.[m
[32m+[m[32mWhen an exception is raised in a before block, RSpec skips any subsequent before blocks and the example, but runs all of the after(:example) and after(:context) hooks.[m
 [m
 Warning: implicit before blocks[m
 [m
[31m-before hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.[m
[32m+[m[32mbefore hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.[m
 [m
 Warning: before(:context)[m
 [m
[31m-It is very tempting to use before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.[m
[32m+[m[32mIt is very tempting to use before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.[m
 [m
 Context[m
 [m
[31m-before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.[m
[32m+[m[32mbefore(:context) is run in an example that is generated to provide group context for the block.[m
 [m
 Instance variables[m
 [m
[31m-Instance variables declared in before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.[m
[32m+[m[32mInstance variables declared in before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.[m
 [m
 Unsupported RSpec constructs[m
 [m
[31m-RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.[m
[32m+[m[32mRSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.[m
[32m+[m
[32m+[m[32mlet declarations.[m
 [m
[32m+[m[32msubject declarations.[m
 [m
[31m-let declarations[m
[31m-subject declarations[m
[31m-Any mocking, stubbing or test double declaration[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
 [m
 [m
 other frameworks[m
 [m
[31m-Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context), but get torn down before the first real example is[m
[31m-ever run.[m
[32m+[m[32mMock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context), but get torn down before the first real example is ever run.[m
 [m
[31m-You can create database-backed model objects in a before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context) block.[m
[32m+[m[32mYou can create database-backed model objects in a before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context) block.[m
 [m
 [m
   [m
[36m@@ -5038,8 +4662,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -5073,8 +4697,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -5089,9 +4713,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -5125,9 +4748,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -5182,16 +4804,15 @@[m [mend[m
       [m
   [m
   [m
[31m-    Adds blockblock to the front of the list of beforebefore blocks in the same[m
[31m-scope (:example:example, :context:context, or :suite:suite).Adds block to the front of the list of before blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds blockblock to the front of the list of beforebefore blocks in the same scope (:example:example, :context:context, or :suite:suite).Adds block to the front of the list of before blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #before for scoping semantics.See #before for scoping semantics.[m
 [m
 [m
   [m
[31m-    Adds block to the front of the list of before blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the front of the list of before blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #before for scoping semantics.[m
 [m
[36m@@ -5199,8 +4820,8 @@[m [mSee #before for scoping semantics.[m
   [m
 [m
   [m
[31m-    Adds block to the front of the list of before blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the front of the list of before blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #before for scoping semantics.[m
 [m
[36m@@ -5291,8 +4912,8 @@[m [mend[m
 [m
   [m
   [m
[31m-    Adds block to the front of the list of before blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the front of the list of before blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #before for scoping semantics.[m
 [m
[36m@@ -5333,36 +4954,28 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
 [m
[31m-Declare a block of code to be run after each example (using :example)[m
[31m-or once after all examples n the context (using :context). See[m
[31m-#before for more information about ordering.[m
[32m+[m
[32m+[m[32mDeclare a block of code to be run after each example (using :example) or once after all examples n the context (using :context). See #before for more information about ordering.[m
 [m
 Exceptions[m
 [m
[31m-after hooks are guaranteed to run even when there are exceptions in[m
[31m-before hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-after blocks are run.[m
[32m+[m[32mafter hooks are guaranteed to run even when there are exceptions in before hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent after blocks are run.[m
 [m
 Order[m
 [m
[31m-after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mafter hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 after(:example) # Declared in the current group.[m
 after(:example) # Declared in a parent group.[m
[36m@@ -5373,10 +4986,7 @@[m [mafter(:context) # Declared in RSpec.configure.[m
 after(:suite)   # Declared in RSpec.configure.[m
 [m
 [m
[31m-This is the reverse of the order in which before hooks are run.[m
[31m-Similarly, if more than one after is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-around hooks will all have run before any after hooks are invoked.[m
[32m+[m[32mThis is the reverse of the order in which before hooks are run. Similarly, if more than one after is declared within any one scope, they are run in reverse order of that in which they are declared. Also around hooks will all have run before any after hooks are invoked.[m
 [m
 [m
   [m
[36m@@ -5410,8 +5020,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -5445,8 +5055,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -5461,9 +5071,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -5497,9 +5106,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -5554,8 +5162,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Adds block to the back of the list of after blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the back of the list of after blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #after for scoping semantics.[m
 [m
[36m@@ -5592,13 +5200,8 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
 [m
[36m@@ -5608,20 +5212,17 @@[m [massociated before and after hooks.[m
 [m
   [m
 [m
[31m-Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.[m
[32m+[m
[32m+[m[32mDeclare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.[m
 [m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 [m
 [m
[31m-The yielded example aliases run with call, which lets you treat it[m
[31m-like a Proc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.[m
[32m+[m[32mThe yielded example aliases run with call, which lets you treat it like a Proc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.[m
 [m
 around(:example) {|ex| Database.transaction(&ex)}[m
 around(:example) {|ex| FakeFS(&ex)}[m
[36m@@ -5629,8 +5230,7 @@[m [maround(:example) {|ex| FakeFS(&ex)}[m
 [m
 Order[m
 [m
[31m-All around hooks execute immediately surrounding an example, this means[m
[31m-that all before hooks will have run and no after hooks will have run yet.[m
[32m+[m[32mAll around hooks execute immediately surrounding an example, this means that all before hooks will have run and no after hooks will have run yet.[m
 [m
 They are not a synonym for before/after.[m
 [m
[36m@@ -5666,9 +5266,8 @@[m [mThey are not a synonym for before/after.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -5702,9 +5301,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -5719,9 +5317,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -5755,9 +5352,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -5815,36 +5412,28 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
 [m
   [m
 [m
[31m-Declare a block of code to be run before each example (using :example)[m
[31m-or once before any example (using :context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.[m
 [m
[31m-You can also use before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.[m
[32m+[m[32mDeclare a block of code to be run before each example (using :example) or once before any example (using :context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.[m
 [m
[31m-Instance variables declared in before(:example) or before(:context)[m
[31m-are accessible within each example.[m
[32m+[m[32mYou can also use before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.[m
[32m+[m
[32m+[m[32mInstance variables declared in before(:example) or before(:context) are accessible within each example.[m
 [m
 Order[m
 [m
[31m-before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mbefore hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 before(:suite)    # Declared in RSpec.configure.[m
 before(:context)  # Declared in RSpec.configure.[m
[36m@@ -5855,15 +5444,11 @@[m [mbefore(:example)  # Declared in a parent group.[m
 before(:example)  # Declared in the current group.[m
 [m
 [m
[31m-If more than one before is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any around hooks will execute[m
[31m-later than any before hook regardless of scope.[m
[32m+[m[32mIf more than one before is declared within any one scope, they are run in the order in which they are declared. Any around hooks will execute later than any before hook regardless of scope.[m
 [m
 Conditions[m
 [m
[31m-When you add a conditions hash to before(:example) or[m
[31m-before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.[m
[32m+[m[32mWhen you add a conditions hash to before(:example) or before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.[m
 [m
 RSpec.configure do |config|[m
   config.before(:example, :authorized => true) do[m
[36m@@ -5886,76 +5471,48 @@[m [mRSpec.describe SomethingElse do[m
 end[m
 [m
 [m
[31m-Note that filtered config :context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.[m
[32m+[m[32mNote that filtered config :context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.[m
 [m
 Warning: before(:suite, :with => :conditions)[m
 [m
[31m-The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite are effectively ignored.[m
[32m+[m[32mThe conditions hash is used to match against specific examples. Since before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite are effectively ignored.[m
 [m
 Exceptions[m
 [m
[31m-When an exception is raised in a before block, RSpec skips any[m
[31m-subsequent before blocks and the example, but runs all of the[m
[31m-after(:example) and after(:context) hooks.[m
[32m+[m[32mWhen an exception is raised in a before block, RSpec skips any subsequent before blocks and the example, but runs all of the after(:example) and after(:context) hooks.[m
 [m
 Warning: implicit before blocks[m
 [m
[31m-before hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.[m
[32m+[m[32mbefore hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.[m
 [m
 Warning: before(:context)[m
 [m
[31m-It is very tempting to use before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.[m
[32m+[m[32mIt is very tempting to use before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.[m
 [m
 Context[m
 [m
[31m-before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.[m
[32m+[m[32mbefore(:context) is run in an example that is generated to provide group context for the block.[m
 [m
 Instance variables[m
 [m
[31m-Instance variables declared in before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.[m
[32m+[m[32mInstance variables declared in before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.[m
 [m
 Unsupported RSpec constructs[m
 [m
[31m-RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.[m
[32m+[m[32mRSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.[m
[32m+[m
[32m+[m[32mlet declarations.[m
 [m
[32m+[m[32msubject declarations.[m
 [m
[31m-let declarations[m
[31m-subject declarations[m
[31m-Any mocking, stubbing or test double declaration[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
 [m
 [m
 other frameworks[m
 [m
[31m-Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context), but get torn down before the first real example is[m
[31m-ever run.[m
[32m+[m[32mMock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context), but get torn down before the first real example is ever run.[m
 [m
[31m-You can create database-backed model objects in a before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context) block.[m
[32m+[m[32mYou can create database-backed model objects in a before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context) block.[m
 [m
 [m
   [m
[36m@@ -6032,8 +5591,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -6067,8 +5626,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -6083,9 +5642,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -6119,9 +5677,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -6176,8 +5733,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Adds block to the front of the list of before blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the front of the list of before blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #before for scoping semantics.[m
 [m
[36m@@ -6241,12 +5798,8 @@[m [mModule: RSpec::Core::Hooks[m
 [m
 Overview[m
   [m
[31m-    Provides before, after and around hooks as a means of[m
[31m-supporting common setup and teardown. This module is extended[m
[31m-onto ExampleGroup, making the methods available from any describe[m
[31m-or context block and included in Configuration, making them[m
[31m-available off of the configuration object to define global setup[m
[31m-or teardown logic.[m
[32m+[m[41m    [m
[32m+[m[32mProvides before, after and around hooks as a means of supporting common setup and teardown. This module is extended onto ExampleGroup, making the methods available from any describe or context block and included in Configuration, making them available off of the configuration object to define global setup or teardown logic.[m
 [m
 [m
   [m
[36m@@ -6369,36 +5927,28 @@[m [mor teardown logic.[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
[32m+[m
   [m
 [m
 [m
[31m-Declare a block of code to be run after each example (using :example)[m
[31m-or once after all examples n the context (using :context). See[m
[31m-#before for more information about ordering.[m
[32m+[m[32mDeclare a block of code to be run after each example (using :example) or once after all examples n the context (using :context). See #before for more information about ordering.[m
 [m
 Exceptions[m
 [m
[31m-after hooks are guaranteed to run even when there are exceptions in[m
[31m-before hooks or examples. When an exception is raised in an after[m
[31m-block, the exception is captured for later reporting, and subsequent[m
[31m-after blocks are run.[m
[32m+[m[32mafter hooks are guaranteed to run even when there are exceptions in before hooks or examples. When an exception is raised in an after block, the exception is captured for later reporting, and subsequent after blocks are run.[m
 [m
 Order[m
 [m
[31m-after hooks are stored in three scopes, which are run in order:[m
[31m-:example, :context, and :suite. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mafter hooks are stored in three scopes, which are run in order: :example, :context, and :suite. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 after(:example) # Declared in the current group.[m
 after(:example) # Declared in a parent group.[m
[36m@@ -6409,10 +5959,7 @@[m [mafter(:context) # Declared in RSpec.configure.[m
 after(:suite)   # Declared in RSpec.configure.[m
 [m
 [m
[31m-This is the reverse of the order in which before hooks are run.[m
[31m-Similarly, if more than one after is declared within any one scope,[m
[31m-they are run in reverse order of that in which they are declared. Also[m
[31m-around hooks will all have run before any after hooks are invoked.[m
[32m+[m[32mThis is the reverse of the order in which before hooks are run. Similarly, if more than one after is declared within any one scope, they are run in reverse order of that in which they are declared. Also around hooks will all have run before any after hooks are invoked.[m
 [m
 [m
   [m
[36m@@ -6446,8 +5993,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -6481,8 +6028,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite (defaults to[m
[31m-:example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -6497,9 +6044,8 @@[m [maround hooks will all have run before any after hooks are invoked.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -6533,9 +6079,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-after(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. after(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -6590,8 +6135,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Adds block to the back of the list of after blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the back of the list of after blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #after for scoping semantics.[m
 [m
[36m@@ -6628,13 +6173,8 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    the syntax of around is similar to that of before and after[m
[31m-but the semantics are quite different. before and after hooks are[m
[31m-run in the context of of the examples with which they are associated,[m
[31m-whereas around hooks are actually responsible for running the[m
[31m-examples. Consequently, around hooks do not have direct access to[m
[31m-resources that are made available within the examples and their[m
[31m-associated before and after hooks.[m
[32m+[m[41m    [m
[32m+[m[32mthe syntax of around is similar to that of before and after but the semantics are quite different. before and after hooks are run in the context of of the examples with which they are associated, whereas around hooks are actually responsible for running the examples. Consequently, around hooks do not have direct access to resources that are made available within the examples and their associated before and after hooks.[m
 [m
   [m
 [m
[36m@@ -6644,20 +6185,17 @@[m [massociated before and after hooks.[m
 [m
   [m
 [m
[31m-Declare a block of code, parts of which will be run before and parts[m
[31m-after the example. It is your responsibility to run the example:.[m
[32m+[m
[32m+[m[32mDeclare a block of code, parts of which will be run before and parts after the example. It is your responsibility to run the example:.[m
 [m
 around(:example) do |ex|[m
   # Do some stuff before.[m
[31m-  ex.run[m
[31m-  # Do some stuff after.[m
[32m+[m[32m  ex.run  # Do some stuff after.[m
[32m+[m
 end[m
 [m
 [m
[31m-The yielded example aliases run with call, which lets you treat it[m
[31m-like a Proc. This is especially handy when working with libraries[m
[31m-that manage their own setup and teardown using a block or proc syntax,[m
[31m-e.g.[m
[32m+[m[32mThe yielded example aliases run with call, which lets you treat it like a Proc. This is especially handy when working with libraries that manage their own setup and teardown using a block or proc syntax, e.g.[m
 [m
 around(:example) {|ex| Database.transaction(&ex)}[m
 around(:example) {|ex| FakeFS(&ex)}[m
[36m@@ -6665,8 +6203,7 @@[m [maround(:example) {|ex| FakeFS(&ex)}[m
 [m
 Order[m
 [m
[31m-All around hooks execute immediately surrounding an example, this means[m
[31m-that all before hooks will have run and no after hooks will have run yet.[m
[32m+[m[32mAll around hooks execute immediately surrounding an example, this means that all before hooks will have run and no after hooks will have run yet.[m
 [m
 They are not a synonym for before/after.[m
 [m
[36m@@ -6702,9 +6239,8 @@[m [mThey are not a synonym for before/after.[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -6738,9 +6274,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        :example (defaults to :example)[m
[31m-present for syntax parity with before and after, but[m
[31m-:example/:each is the only supported value.[m
[32m+[m[41m        [m
[32m+[m[32m:example (defaults to :example) present for syntax parity with before and after, but :example/:each is the only supported value.[m
 [m
       [m
     [m
[36m@@ -6755,9 +6290,8 @@[m [mpresent for syntax parity with before and after, but[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -6791,9 +6325,8 @@[m [monly run with examples or groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching[m
[31m-these conditions e.g. around(:example, :ui => true) { ... } will[m
[31m-only run with examples or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. around(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -6851,36 +6385,28 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    The :example and :context scopes are also available as[m
[31m-:each and :all, respectively. Use whichever you prefer.[m
[32m+[m[41m    [m
[32m+[m[32mThe :example and :context scopes are also available as :each and :all, respectively. Use whichever you prefer.[m
 [m
   [m
 [m
   [m
     Note:[m
[31m-    The :suite scope is only supported for hooks registered on[m
[31m-RSpec.configuration since they exist independently of any[m
[31m-example or example group.[m
[32m+[m[41m    [m
[32m+[m[32mThe :suite scope is only supported for hooks registered on RSpec.configuration since they exist independently of any example or example group.[m
[32m+[m
   [m
 [m
 [m
[31m-Declare a block of code to be run before each example (using :example)[m
[31m-or once before any example (using :context). These are usually[m
[31m-declared directly in the ExampleGroup to which they apply, but they[m
[31m-can also be shared across multiple groups.[m
[32m+[m[32mDeclare a block of code to be run before each example (using :example) or once before any example (using :context). These are usually declared directly in the ExampleGroup to which they apply, but they can also be shared across multiple groups.[m
 [m
[31m-You can also use before(:suite) to run a block of code before any[m
[31m-example groups are run. This should be declared in RSpec.configure.[m
[32m+[m[32mYou can also use before(:suite) to run a block of code before any example groups are run. This should be declared in RSpec.configure.[m
 [m
[31m-Instance variables declared in before(:example) or before(:context)[m
[31m-are accessible within each example.[m
[32m+[m[32mInstance variables declared in before(:example) or before(:context) are accessible within each example.[m
 [m
 Order[m
 [m
[31m-before hooks are stored in three scopes, which are run in order:[m
[31m-:suite, :context, and :example. They can also be declared in[m
[31m-several different places: RSpec.configure, a parent group, the current[m
[31m-group. They are run in the following order:.[m
[32m+[m[32mbefore hooks are stored in three scopes, which are run in order: :suite, :context, and :example. They can also be declared in several different places: RSpec.configure, a parent group, the current group. They are run in the following order:.[m
 [m
 before(:suite)    # Declared in RSpec.configure.[m
 before(:context)  # Declared in RSpec.configure.[m
[36m@@ -6891,15 +6417,11 @@[m [mbefore(:example)  # Declared in a parent group.[m
 before(:example)  # Declared in the current group.[m
 [m
 [m
[31m-If more than one before is declared within any one scope, they are run[m
[31m-in the order in which they are declared. Any around hooks will execute[m
[31m-later than any before hook regardless of scope.[m
[32m+[m[32mIf more than one before is declared within any one scope, they are run in the order in which they are declared. Any around hooks will execute later than any before hook regardless of scope.[m
 [m
 Conditions[m
 [m
[31m-When you add a conditions hash to before(:example) or[m
[31m-before(:context), RSpec will only apply that hook to groups or[m
[31m-examples that match the conditions. e.g.[m
[32m+[m[32mWhen you add a conditions hash to before(:example) or before(:context), RSpec will only apply that hook to groups or examples that match the conditions. e.g.[m
 [m
 RSpec.configure do |config|[m
   config.before(:example, :authorized => true) do[m
[36m@@ -6922,76 +6444,48 @@[m [mRSpec.describe SomethingElse do[m
 end[m
 [m
 [m
[31m-Note that filtered config :context hooks can still be applied[m
[31m-to individual examples that have matching metadata. Just like[m
[31m-Ruby's object model is that every object has a singleton class[m
[31m-which has only a single instance, RSpec's model is that every[m
[31m-example has a singleton example group containing just the one[m
[31m-example.[m
[32m+[m[32mNote that filtered config :context hooks can still be applied to individual examples that have matching metadata. Just like Ruby's object model is that every object has a singleton class which has only a single instance, RSpec's model is that every example has a singleton example group containing just the one example.[m
 [m
 Warning: before(:suite, :with => :conditions)[m
 [m
[31m-The conditions hash is used to match against specific examples. Since[m
[31m-before(:suite) is not run in relation to any specific example or[m
[31m-group, conditions passed along with :suite are effectively ignored.[m
[32m+[m[32mThe conditions hash is used to match against specific examples. Since before(:suite) is not run in relation to any specific example or group, conditions passed along with :suite are effectively ignored.[m
 [m
 Exceptions[m
 [m
[31m-When an exception is raised in a before block, RSpec skips any[m
[31m-subsequent before blocks and the example, but runs all of the[m
[31m-after(:example) and after(:context) hooks.[m
[32m+[m[32mWhen an exception is raised in a before block, RSpec skips any subsequent before blocks and the example, but runs all of the after(:example) and after(:context) hooks.[m
 [m
 Warning: implicit before blocks[m
 [m
[31m-before hooks can also be declared in shared contexts which get[m
[31m-included implicitly either by you or by extension libraries. Since[m
[31m-RSpec runs these in the order in which they are declared within each[m
[31m-scope, load order matters, and can lead to confusing results when one[m
[31m-before block depends on state that is prepared in another before block[m
[31m-that gets run later.[m
[32m+[m[32mbefore hooks can also be declared in shared contexts which get included implicitly either by you or by extension libraries. Since RSpec runs these in the order in which they are declared within each scope, load order matters, and can lead to confusing results when one before block depends on state that is prepared in another before block that gets run later.[m
 [m
 Warning: before(:context)[m
 [m
[31m-It is very tempting to use before(:context) to speed things up, but we[m
[31m-recommend that you avoid this as there are a number of gotchas, as well[m
[31m-as things that simply don't work.[m
[32m+[m[32mIt is very tempting to use before(:context) to speed things up, but we recommend that you avoid this as there are a number of gotchas, as well as things that simply don't work.[m
 [m
 Context[m
 [m
[31m-before(:context) is run in an example that is generated to provide[m
[31m-group context for the block.[m
[32m+[m[32mbefore(:context) is run in an example that is generated to provide group context for the block.[m
 [m
 Instance variables[m
 [m
[31m-Instance variables declared in before(:context) are shared across all[m
[31m-the examples in the group. This means that each example can change the[m
[31m-state of a shared object, resulting in an ordering dependency that can[m
[31m-make it difficult to reason about failures.[m
[32m+[m[32mInstance variables declared in before(:context) are shared across all the examples in the group. This means that each example can change the state of a shared object, resulting in an ordering dependency that can make it difficult to reason about failures.[m
 [m
 Unsupported RSpec constructs[m
 [m
[31m-RSpec has several constructs that reset state between each example[m
[31m-automatically. These are not intended for use from within[m
[31m-before(:context):.[m
[32m+[m[32mRSpec has several constructs that reset state between each example automatically. These are not intended for use from within before(:context):.[m
 [m
[32m+[m[32mlet declarations.[m
 [m
[31m-let declarations[m
[31m-subject declarations[m
[31m-Any mocking, stubbing or test double declaration[m
[32m+[m[32msubject declarations.[m
[32m+[m
[32m+[m[32mAny mocking, stubbing or test double declaration.[m
 [m
 [m
 other frameworks[m
 [m
[31m-Mock object frameworks and database transaction managers (like[m
[31m-ActiveRecord) are typically designed around the idea of setting up[m
[31m-before an example, running that one example, and then tearing down. This[m
[31m-means that mocks and stubs can (sometimes) be declared in[m
[31m-before(:context), but get torn down before the first real example is[m
[31m-ever run.[m
[32m+[m[32mMock object frameworks and database transaction managers (like ActiveRecord) are typically designed around the idea of setting up before an example, running that one example, and then tearing down. This means that mocks and stubs can (sometimes) be declared in before(:context), but get torn down before the first real example is ever run.[m
 [m
[31m-You can create database-backed model objects in a before(:context)[m
[31m-in rspec-rails, but it will not be wrapped in a transaction for you, so[m
[31m-you are on your own to clean up in an after(:context) block.[m
[32m+[m[32mYou can create database-backed model objects in a before(:context) in rspec-rails, but it will not be wrapped in a transaction for you, so you are on your own to clean up in an after(:context) block.[m
 [m
 [m
   [m
[36m@@ -7068,8 +6564,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -7103,8 +6599,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        :example, :context, or :suite[m
[31m-(defaults to :example)[m
[32m+[m[41m        [m
[32m+[m[32m:example, :context, or :suite (defaults to :example)[m
 [m
       [m
     [m
[36m@@ -7119,9 +6615,8 @@[m [mend[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -7155,9 +6650,8 @@[m [mor groups declared with :ui => true.[m
       [m
       [m
         —[m
[31m-        constrains this hook to examples matching these conditions e.g.[m
[31m-before(:example, :ui => true) { ... } will only run with examples[m
[31m-or groups declared with :ui => true.[m
[32m+[m[41m        [m
[32m+[m[32mconstrains this hook to examples matching these conditions e.g. before(:example, :ui => true) { ... } will only run with examples or groups declared with :ui => true.[m
 [m
       [m
     [m
[36m@@ -7212,8 +6706,8 @@[m [mend[m
       [m
   [m
   [m
[31m-    Adds block to the front of the list of before blocks in the same[m
[31m-scope (:example, :context, or :suite).[m
[32m+[m[41m    [m
[32m+[m[32mAdds block to the front of the list of before blocks in the same scope (:example, :context, or :suite).[m
 [m
 See #before for scoping semantics.[m
 [m
