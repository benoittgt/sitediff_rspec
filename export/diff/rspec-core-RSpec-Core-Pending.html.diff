[1mdiff --git a/export/rspec-core-RSpec-Core-Pending.html.current b/export/rspec-core-RSpec-Core-Pending.html.new[m
[1mindex 685a948..5f6d3f6 100644[m
[1m--- a/export/rspec-core-RSpec-Core-Pending.html.current[m
[1m+++ b/export/rspec-core-RSpec-Core-Pending.html.new[m
[36m@@ -61,21 +61,20 @@[m [mModule: RSpec::Core::Pending[m
 [m
 OverviewOverview[m
   [m
[31m-    Provides methods to mark examples as pending. These methods are available[m
[31m-to be called from within any example or hook.Provides methods to mark examples as pending. These methods are available[m
[31m-to be called from within any example or hook.[m
     [m
[32m+[m[32mProvides methods to mark examples as pending. These methods are available to be called from within any example or hook.Provides methods to mark examples as pending. These methods are available to be called from within any example or hook.[m
 [m
 [m
[31m-    Provides methods to mark examples as pending. These methods are available[m
[31m-to be called from within any example or hook.[m
   [m
     [m
[32m+[m[32mProvides methods to mark examples as pending. These methods are available to be called from within any example or hook.[m
 [m
 [m
   [m
[31m-    Provides methods to mark examples as pending. These methods are available[m
[31m-to be called from within any example or hook.[m
[32m+[m
[32m+[m[41m  [m
[32m+[m[41m    [m
[32m+[m[32mProvides methods to mark examples as pending. These methods are available to be called from within any example or hook.[m
 [m
 [m
   [m
[36m@@ -239,13 +248,8 @@[m [mMarks an example as pending and skips execution.[m
     [m
   [m
     Note:Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.before(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 itit ""does somethingdoes something"""does something",, :pending:pending =>=> truetrue dodo[m
   # ...[m
[36m@@ -259,9 +263,7 @@[m [mit "does something", :pending => true do[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.or pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 itit ""does somethingdoes something"""does something",, :pending:pending =>=> ""something else getting finishedsomething else getting finished"""something else getting finished" dodo[m
   # ...[m
[36m@@ -274,18 +276,15 @@[m [mit "does something", :pending => "something else getting finished" do[m
   # ...[m
 end[m
 [m
[31m-before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -294,18 +293,15 @@[m [mend[m
 [m
   [m
     Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -314,29 +310,23 @@[m [mend[m
 [m
   [m
 [m
[31m-Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.[m
[32m+[m
[32m+[m[32mMarks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.Marks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.[m
 [m
 [m
   [m
     [m
   [m
     Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -345,9 +335,8 @@[m [mend[m
 [m
   [m
 [m
[31m-Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.[m
[32m+[m
[32m+[m[32mMarks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.[m
 [m
 [m
   [m
[36m@@ -356,18 +345,15 @@[m [mpending can be removed.[m
     [m
   [m
     Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -376,9 +362,8 @@[m [mend[m
 [m
   [m
 [m
[31m-Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.[m
[32m+[m
[32m+[m[32mMarks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.[m
 [m
 [m
   [m
[36m@@ -897,18 +887,15 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -917,9 +904,8 @@[m [mend[m
 [m
   [m
 [m
[31m-Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.[m
[32m+[m
[32m+[m[32mMarks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.[m
 [m
 [m
   [m
[36m@@ -1475,18 +1472,15 @@[m [mend[m
     [m
   [m
     Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -1495,9 +1489,8 @@[m [mend[m
 [m
   [m
 [m
[31m-Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.[m
[32m+[m
[32m+[m[32mMarks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.[m
 [m
 [m
   [m
[36m@@ -1742,8 +1738,8 @@[m [mModule: RSpec::Core::Pending[m
 [m
 Overview[m
   [m
[31m-    Provides methods to mark examples as pending. These methods are available[m
[31m-to be called from within any example or hook.[m
[32m+[m[41m    [m
[32m+[m[32mProvides methods to mark examples as pending. These methods are available to be called from within any example or hook.[m
 [m
 [m
   [m
[36m@@ -1825,18 +1823,15 @@[m [mDefined Under Namespace[m
     [m
   [m
     Note:[m
[31m-    before(:example) hooks are eval'd when you use the pending[m
[31m-method within an example. If you want to declare an example pending[m
[31m-and bypass the before hooks as well, you can pass :pending => true[m
[31m-to the it method:.[m
[32m+[m[41m    [m
[32m+[m[32mbefore(:example) hooks are eval'd when you use the pending method within an example. If you want to declare an example pending and bypass the before hooks as well, you can pass :pending => true to the it method:.[m
 [m
 it "does something", :pending => true do[m
   # ...[m
 end[m
 [m
 [m
[31m-or pass :pending => "something else getting finished" to add a[m
[31m-message to the summary report:.[m
[32m+[m[32mor pass :pending => "something else getting finished" to add a message to the summary report:.[m
 [m
 it "does something", :pending => "something else getting finished" do[m
   # ...[m
[36m@@ -1845,9 +1840,8 @@[m [mend[m
 [m
   [m
 [m
[31m-Marks an example as pending. The rest of the example will still be[m
[31m-executed, and if it passes the example will fail to indicate that the[m
[31m-pending can be removed.[m
[32m+[m
[32m+[m[32mMarks an example as pending. The rest of the example will still be executed, and if it passes the example will fail to indicate that the pending can be removed.[m
 [m
 [m
   [m
