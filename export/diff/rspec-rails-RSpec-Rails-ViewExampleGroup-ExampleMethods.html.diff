[1mdiff --git a/export/rspec-rails-RSpec-Rails-ViewExampleGroup-ExampleMethods.html.current b/export/rspec-rails-RSpec-Rails-ViewExampleGroup-ExampleMethods.html.new[m
[1mindex 2ea0fb2..5683432 100644[m
[1m--- a/export/rspec-rails-RSpec-Rails-ViewExampleGroup-ExampleMethods.html.current[m
[1m+++ b/export/rspec-rails-RSpec-Rails-ViewExampleGroup-ExampleMethods.html.new[m
[36m@@ -15,6 +16,12 @@[m [mModule: RSpec::Rails::ViewExampleGroup::ExampleMethods[m
       Extended by:Extended by:[m
       ActiveSupport::ConcernActiveSupport::Concern[m
   [m
[32m+[m[32m      Extended by:[m
[32m+[m[32m      ActiveSupport::Concern[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[41m  [m
   [m
 [m
   [m
[36m@@ -24,6 +31,12 @@[m [mModule: RSpec::Rails::ViewExampleGroup::ExampleMethods[m
     Defined in:Defined in:[m
     lib/rspec/rails/example/view_example_group.rblib/rspec/rails/example/view_example_group.rb[m
   [m
[32m+[m[32m    Defined in:[m
[32m+[m[32m    lib/rspec/rails/example/view_example_group.rb[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m
[32m+[m[41m  [m
 [m
   [m
   [m
[36m@@ -825,8 +841,7 @@[m [mDeprecated. Use rendered instead.[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113# File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-defdef responseresponse[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdefdef responseresponse  # `assert_template` expects `response` to implement a #body method[m
 # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
 # like an `ActionDispatch::Response` does to force the view to[m
[36m@@ -845,8 +861,7 @@[m [mdefdef responseresponse[m
   renderedrendered[m
 endend# File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -862,8 +878,7 @@[m [mend[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -900,8 +916,7 @@[m [mend[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -940,8 +956,7 @@[m [mend[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -993,8 +1009,7 @@[m [mend[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -1314,23 +1330,23 @@[m [mend[m
 describedescribe ""widgets/new.html.erbwidgets/new.html.erb"""widgets/new.html.erb" dodo[m
   itit ""shows all the widgetsshows all the widgets"""shows all the widgets" dodo[m
     viewview..stubstub((:foo:foo)) {{ ""foofoo"""foo" }}[m
[31m-    renderrender[m
[31m-    # ...[m
[32m+[m[32m    renderrender    # ...[m
 # ...[m
[32m+[m
   endend[m
 endend[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 [m
[36m@@ -1342,8 +1358,8 @@[m [mend[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 [m
[36m@@ -1357,8 +1373,8 @@[m [mend[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 [m
[36m@@ -1455,8 +1471,8 @@[m [mend[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 [m
[36m@@ -1607,8 +1623,7 @@[m [mend[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -1704,8 +1720,8 @@[m [mend[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 [m
[36m@@ -2016,8 +2036,7 @@[m [mend[m
     [m
       # File 'lib/rspec/rails/example/view_example_group.rb', line 113[m
 [m
[31m-def response[m
[31m-  # `assert_template` expects `response` to implement a #body method[m
[32m+[m[32mdef response  # `assert_template` expects `response` to implement a #body method[m
   # like an `ActionDispatch::Response` does to force the view to[m
   # render. For backwards compatibility, we use #response as an alias[m
   # for #rendered, but it needs to implement #body to avoid[m
[36m@@ -2113,8 +2133,8 @@[m [mend[m
 describe "widgets/new.html.erb" do[m
   it "shows all the widgets" do[m
     view.stub(:foo) { "foo" }[m
[31m-    render[m
[31m-    # ...[m
[32m+[m[32m    render    # ...[m
[32m+[m
   end[m
 end[m
 [m
