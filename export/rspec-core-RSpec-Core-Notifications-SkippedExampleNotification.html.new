Class: RSpec::Core::Notifications::SkippedExampleNotification
  
  
  
Class: RSpec::Core::Notifications::SkippedExampleNotification
  
  
  


  
  
    Inherits:Inherits:
    
      ExampleNotificationExampleNotification
      
        
          ObjectObject
          
            StructStruct
          
            ExampleNotificationExampleNotification
          
            RSpec::Core::Notifications::SkippedExampleNotificationRSpec::Core::Notifications::SkippedExampleNotification
          
        
          Object
          
            Struct
          
            ExampleNotification
          
            RSpec::Core::Notifications::SkippedExampleNotification
          
        
        show allshow all
      
    
      ExampleNotification
      
        
          Object
          
            Struct
          
            ExampleNotification
          
            RSpec::Core::Notifications::SkippedExampleNotification
          
        
        show all
      
    
  
    Inherits:
    
      ExampleNotification
      
        
          Object
          
            Struct
          
            ExampleNotification
          
            RSpec::Core::Notifications::SkippedExampleNotification
          
        
        show all
      
    
  
  

  
  
  
  
  

  

  
  
    Defined in:Defined in:
    lib/rspec/core/notifications.rblib/rspec/core/notifications.rb
  
    Defined in:
    lib/rspec/core/notifications.rb
  
  

  
  
    Inherits:
    
      ExampleNotification
      
        
          Object
          
            Struct
          
            ExampleNotification
          
            RSpec::Core::Notifications::SkippedExampleNotification
          
        
        show all
      
    
  
  

  
  
  
  
  

  

  
  
    Defined in:
    lib/rspec/core/notifications.rb
  
  


OverviewOverview
  
    
The SkippedExampleNotification extends ExampleNotification with things useful for specs that are skipped.The SkippedExampleNotification extends ExampleNotification with things useful for specs that are skipped.


  
    
The SkippedExampleNotification extends ExampleNotification with things useful for specs that are skipped.


  

  
    
The SkippedExampleNotification extends ExampleNotification with things useful for specs that are skipped.


  


  

  See Also:See Also:
  
    
      ExampleNotificationExampleNotification
    
  
    
      ExampleNotification
    
  


  

  See Also:
  
    
      ExampleNotification
    
  





  Instance Attribute Summary Instance Attribute Summary 
  
    
      
  
  
  
  
    
    
  
  
  
  
  

  
    
the current example.the current example.

the current example.

the current example.

  

  
  
  
  
    
    
  
  
  
  
  

  
    
the current example.

  


    
  
    
      
  
  
  
  
    
    
  
  
  
  
  

  
    
the current example.

  


    
  




  
    
      Instance Method Summary
      
    
      Instance Method Summary
      
    

    
      
        
  
  
  
  
  
  
  
  

  
    
The pending detail fully formatted in the way that RSpec's built-in formatters emit.The pending detail fully formatted in the way that RSpec's built-in formatters emit.

The pending detail fully formatted in the way that RSpec's built-in formatters emit.

The pending detail fully formatted in the way that RSpec's built-in formatters emit.

  

  
  
  
  
  
  
  
  

  
    
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

  


      
    
      
        
  
  
  
  
  
  
  
  

  
    
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

  


      
    
  


  
  
  
  
  
  
  
  
    Instance Attribute DetailsInstance Attribute Details
    
      
      
      
  
  
    
the current example.the current example.


  
    
the current example.


  

  
    
the current example.


  


  
Returns:Returns:

  
    
      
      
        (RSpec::Core::ExampleRSpec::Core::Example)(RSpec::Core::Example)
      
      
      
        —
        
the current value of examplethe current value of example

the current value of example

      
    
      
      
        (RSpec::Core::Example)
      
      
      
        —
        
the current value of example

      
    
  

  
    
      
      
        (RSpec::Core::Example)
      
      
      
        —
        
the current value of example

      
    
  



  
Returns:

  
    
      
      
        (RSpec::Core::Example)
      
      
      
        —
        
the current value of example

      
    
  



  
    
      


228
229
230


228
229
230
    
      


228
229
230
    
    
      # File 'lib/rspec/core/notifications.rb', line 228# File 'lib/rspec/core/notifications.rb', line 228

defdef exampleexample
  @example@example
endend# File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
      # File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
  
    
      


228
229
230
    
    
      # File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
  

  
    
      


228
229
230
    
    
      # File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
  


  
  
    
the current example.


  


  
Returns:

  
    
      
      
        (RSpec::Core::Example)
      
      
      
        —
        
the current value of example

      
    
  



  
    
      


228
229
230
    
    
      # File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
  


    
  
    Instance Attribute Details
    
      
      
      
  
  
    
the current example.


  


  
Returns:

  
    
      
      
        (RSpec::Core::Example)
      
      
      
        —
        
the current value of example

      
    
  



  
    
      


228
229
230
    
    
      # File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
  


    
  


  
    Instance Method DetailsInstance Method Details

    
      
  
  
    
Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.


  
    
Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.


  

  
    
Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.


  


  
Returns:Returns:

  
    
      
      
        (StringString)(String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.The pending detail fully formatted in the way that RSpec's built-in formatters emit.

The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
      
      
        (String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
  

  
    
      
      
        (String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
  



  
Returns:

  
    
      
      
        (String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
  



  
    
      


233
234
235
236
237
238
239
240
241
242
243


233
234
235
236
237
238
239
240
241
242
243
    
      


233
234
235
236
237
238
239
240
241
242
243
    
    
      # File 'lib/rspec/core/notifications.rb', line 233# File 'lib/rspec/core/notifications.rb', line 233

defdef fully_formattedfully_formatted((pending_numberpending_number,, colorizercolorizer==::::RSpecRSpec::::CoreCore::::FormattersFormatters::::ConsoleCodesConsoleCodes))
  formatted_callerformatted_caller == RSpecRSpec..configurationconfiguration..backtrace_formatterbacktrace_formatter..backtrace_linebacktrace_line((exampleexample..locationlocation))

  [[
    colorizercolorizer..wrapwrap((""\n  \n  #{#{pending_numberpending_number}}) ) #{#{exampleexample..full_descriptionfull_description}}"""\n  #{pending_number}) #{example.full_description}",, :pending:pending)),,
    ""\n     \n     """\n     ",,
    FormattersFormatters::::ExceptionPresenterExceptionPresenter::::PENDING_DETAIL_FORMATTERPENDING_DETAIL_FORMATTER..callcall((exampleexample,, colorizercolorizer)),,
    ""\n\n"""\n",,
    colorizercolorizer..wrapwrap((""     #      # #{#{formatted_callerformatted_caller}}\n\n"""     # #{formatted_caller}\n",, :detail:detail))
  ]]..joinjoin((""""""))
endend# File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
      # File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
  
    
      


233
234
235
236
237
238
239
240
241
242
243
    
    
      # File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
  

  
    
      


233
234
235
236
237
238
239
240
241
242
243
    
    
      # File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
  


  
  
    
Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.


  


  
Returns:

  
    
      
      
        (String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
  



  
    
      


233
234
235
236
237
238
239
240
241
242
243
    
    
      # File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
  


    
  
    Instance Method Details

    
      
  
  
    
Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.


  


  
Returns:

  
    
      
      
        (String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
  



  
    
      


233
234
235
236
237
238
239
240
241
242
243
    
    
      # File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
  


    
  

Class: RSpec::Core::Notifications::SkippedExampleNotification
  
  
  


  
  
    Inherits:
    
      ExampleNotification
      
        
          Object
          
            Struct
          
            ExampleNotification
          
            RSpec::Core::Notifications::SkippedExampleNotification
          
        
        show all
      
    
  
  

  
  
  
  
  

  

  
  
    Defined in:
    lib/rspec/core/notifications.rb
  
  


Overview
  
    
The SkippedExampleNotification extends ExampleNotification with things useful for specs that are skipped.


  


  

  See Also:
  
    
      ExampleNotification
    
  





  Instance Attribute Summary 
  
    
      
  
  
  
  
    
    
  
  
  
  
  

  
    
the current example.

  


    
  




  
    
      Instance Method Summary
      
    

    
      
        
  
  
  
  
  
  
  
  

  
    
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

  


      
    
  


  
  
  
  
  
  
  
  
    Instance Attribute Details
    
      
      
      
  
  
    
the current example.


  


  
Returns:

  
    
      
      
        (RSpec::Core::Example)
      
      
      
        —
        
the current value of example

      
    
  



  
    
      


228
229
230
    
    
      # File 'lib/rspec/core/notifications.rb', line 228

def example
  @example
end
    
  


    
  


  
    Instance Method Details

    
      
  
  
    
Returns The pending detail fully formatted in the way that RSpec's built-in formatters emit.


  


  
Returns:

  
    
      
      
        (String)
      
      
      
        —
        
The pending detail fully formatted in the way that RSpec's built-in formatters emit.

      
    
  



  
    
      


233
234
235
236
237
238
239
240
241
242
243
    
    
      # File 'lib/rspec/core/notifications.rb', line 233

def fully_formatted(pending_number, colorizer=::RSpec::Core::Formatters::ConsoleCodes)
  formatted_caller = RSpec.configuration.backtrace_formatter.backtrace_line(example.location)

  [
    colorizer.wrap("\n  #{pending_number}) #{example.full_description}", :pending),
    "\n     ",
    Formatters::ExceptionPresenter::PENDING_DETAIL_FORMATTER.call(example, colorizer),
    "\n",
    colorizer.wrap("     # #{formatted_caller}\n", :detail)
  ].join("")
end
    
  


    
  

