Module: RSpec::Core::DSL
  
  
  
Module: RSpec::Core::DSL
  
  
  


  

  
  
  
  
  

  

  
  
    Defined in:Defined in:
    lib/rspec/core/dsl.rblib/rspec/core/dsl.rb
  
    Defined in:
    lib/rspec/core/dsl.rb
  
  

  

  
  
  
  
  

  

  
  
    Defined in:
    lib/rspec/core/dsl.rb
  
  


OverviewOverview
  
    
DSL defines methods to group examples, most notably describe, and exposes them as class methods of RSpec. They can also be exposed globally (on main and instances of Module) through the Configuration option expose_dsl_globally.DSL defines methods to group examples, most notably describe, and exposes them as class methods of RSpec. They can also be exposed globally (on main and instances of Module) through the Configuration option expose_dsl_globally.

By default the methods describe, context and example_group are exposed. These methods define a named context for one or more examples. The given block is evaluated in the context of a generated subclass of ExampleGroup.By default the methods describe, context and example_group are exposed. These methods define a named context for one or more examples. The given block is evaluated in the context of a generated subclass of ExampleGroup.

Examples:Examples:

RSpecRSpec..describedescribe ""somethingsomething"""something" dodo
  contextcontext ""when something is a certain waywhen something is a certain way"""when something is a certain way" dodo
    itit ""does somethingdoes something"""does something" dodo
      # example code goes here
# example code goes here
    endend
  endend
endend
RSpec.describe "something" do
  context "when something is a certain way" do
    it "does something" do
      # example code goes here
    end
  end
end
RSpec.describe "something" do
  context "when something is a certain way" do
    it "does something" do
      # example code goes here
    end
  end
end



  
    
DSL defines methods to group examples, most notably describe, and exposes them as class methods of RSpec. They can also be exposed globally (on main and instances of Module) through the Configuration option expose_dsl_globally.

By default the methods describe, context and example_group are exposed. These methods define a named context for one or more examples. The given block is evaluated in the context of a generated subclass of ExampleGroup.

Examples:

RSpec.describe "something" do
  context "when something is a certain way" do
    it "does something" do
      # example code goes here
    end
  end
end



  

  
    
DSL defines methods to group examples, most notably describe, and exposes them as class methods of RSpec. They can also be exposed globally (on main and instances of Module) through the Configuration option expose_dsl_globally.

By default the methods describe, context and example_group are exposed. These methods define a named context for one or more examples. The given block is evaluated in the context of a generated subclass of ExampleGroup.

Examples:

RSpec.describe "something" do
  context "when something is a certain way" do
    it "does something" do
      # example code goes here
    end
  end
end



  


  

  See Also:See Also:
  
    
      ExampleGroupExampleGroup
    
      ExampleGroup.example_groupExampleGroup.example_group
    
  
    
      ExampleGroup
    
      ExampleGroup.example_group
    
  


  

  See Also:
  
    
      ExampleGroup
    
      ExampleGroup.example_group
    
  








  
    
      Class Method Summary
      
    
      Class Method Summary
      
    

    
      
        
  
  
  
  
  
  
  
  privateprivate

  
    
Adds the describe method to Module and the top level binding.Adds the describe method to Module and the top level binding.

Adds the describe method to Module and the top level binding.

Adds the describe method to Module and the top level binding.

  

  
  
  
  
  
  
  
  private

  
    
Adds the describe method to Module and the top level binding.

  


      
        
  
  
  
  
  
  
  
  privateprivate

  
    
Removes the describe method from Module and the top level binding.Removes the describe method from Module and the top level binding.

Removes the describe method from Module and the top level binding.

Removes the describe method from Module and the top level binding.

  

  
  
  
  
  
  
  
  private

  
    
Removes the describe method from Module and the top level binding.

  


      
    
      
        
  
  
  
  
  
  
  
  private

  
    
Adds the describe method to Module and the top level binding.

  


      
        
  
  
  
  
  
  
  
  private

  
    
Removes the describe method from Module and the top level binding.

  


      
    
  



  
    Class Method DetailsClass Method Details

    
      
  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .   This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Adds the describe method to Module and the top level binding.Adds the describe method to Module and the top level binding.


  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Adds the describe method to Module and the top level binding.


  

  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Adds the describe method to Module and the top level binding.


  


  


  


  
    
      


58
59
60
61
62
63
64
65
66


58
59
60
61
62
63
64
65
66
    
      


58
59
60
61
62
63
64
65
66
    
    
      # File 'lib/rspec/core/dsl.rb', line 58# File 'lib/rspec/core/dsl.rb', line 58

defdef selfself..expose_globally!expose_globally!
  returnreturn ifif exposed_globally?exposed_globally?

  example_group_aliasesexample_group_aliases..eacheach dodo ||method_namemethod_name||
    expose_example_group_alias_globallyexpose_example_group_alias_globally((method_namemethod_name))
  endend

  @exposed_globally@exposed_globally == truetrue
endend# File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
      # File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
  
    
      


58
59
60
61
62
63
64
65
66
    
    
      # File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
  

  
    
      


58
59
60
61
62
63
64
65
66
    
    
      # File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
  


  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Adds the describe method to Module and the top level binding.


  


  


  
    
      


58
59
60
61
62
63
64
65
66
    
    
      # File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
  


    
      
  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .   This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Removes the describe method from Module and the top level binding.Removes the describe method from Module and the top level binding.


  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Removes the describe method from Module and the top level binding.


  

  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Removes the describe method from Module and the top level binding.


  


  


  


  
    
      


70
71
72
73
74
75
76
77
78


70
71
72
73
74
75
76
77
78
    
      


70
71
72
73
74
75
76
77
78
    
    
      # File 'lib/rspec/core/dsl.rb', line 70# File 'lib/rspec/core/dsl.rb', line 70

defdef selfself..remove_globally!remove_globally!
  returnreturn unlessunless exposed_globally?exposed_globally?

  example_group_aliasesexample_group_aliases..eacheach dodo ||method_namemethod_name||
    change_global_dslchange_global_dsl {{ undef_methodundef_method method_namemethod_name }}
  endend

  @exposed_globally@exposed_globally == falsefalse
endend# File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
      # File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
  
    
      


70
71
72
73
74
75
76
77
78
    
    
      # File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
  

  
    
      


70
71
72
73
74
75
76
77
78
    
    
      # File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
  


  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Removes the describe method from Module and the top level binding.


  


  


  
    
      


70
71
72
73
74
75
76
77
78
    
    
      # File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
  


    
  
    Class Method Details

    
      
  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Adds the describe method to Module and the top level binding.


  


  


  
    
      


58
59
60
61
62
63
64
65
66
    
    
      # File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
  


    
      
  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Removes the describe method from Module and the top level binding.


  


  


  
    
      


70
71
72
73
74
75
76
77
78
    
    
      # File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
  


    
  

Module: RSpec::Core::DSL
  
  
  


  

  
  
  
  
  

  

  
  
    Defined in:
    lib/rspec/core/dsl.rb
  
  


Overview
  
    
DSL defines methods to group examples, most notably describe, and exposes them as class methods of RSpec. They can also be exposed globally (on main and instances of Module) through the Configuration option expose_dsl_globally.

By default the methods describe, context and example_group are exposed. These methods define a named context for one or more examples. The given block is evaluated in the context of a generated subclass of ExampleGroup.

Examples:

RSpec.describe "something" do
  context "when something is a certain way" do
    it "does something" do
      # example code goes here
    end
  end
end



  


  

  See Also:
  
    
      ExampleGroup
    
      ExampleGroup.example_group
    
  








  
    
      Class Method Summary
      
    

    
      
        
  
  
  
  
  
  
  
  private

  
    
Adds the describe method to Module and the top level binding.

  


      
        
  
  
  
  
  
  
  
  private

  
    
Removes the describe method from Module and the top level binding.

  


      
    
  



  
    Class Method Details

    
      
  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Adds the describe method to Module and the top level binding.


  


  


  
    
      


58
59
60
61
62
63
64
65
66
    
    
      # File 'lib/rspec/core/dsl.rb', line 58

def self.expose_globally!
  return if exposed_globally?

  example_group_aliases.each do |method_name|
    expose_example_group_alias_globally(method_name)
  end

  @exposed_globally = true
end
    
  


    
      
  
  
       This method is part of a private API.   You should avoid using this method if possible, as it may be removed or be changed in the future. .

Removes the describe method from Module and the top level binding.


  


  


  
    
      


70
71
72
73
74
75
76
77
78
    
    
      # File 'lib/rspec/core/dsl.rb', line 70

def self.remove_globally!
  return unless exposed_globally?

  example_group_aliases.each do |method_name|
    change_global_dsl { undef_method method_name }
  end

  @exposed_globally = false
end
    
  


    
  

